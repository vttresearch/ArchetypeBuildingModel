var documenterSearchIndex = {"docs":
[{"location":"archetype_definitions/#Input-data-reference","page":"Input data reference","title":"Input data reference","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"This section contains automatically generated descriptions of the Spine Datastore structure used for the archetype definitions and building stock input data, based on the archetype_definitions.json file. If you are not familiar with Spine Datastores, see the Spine Toolbox documentation.","category":"page"},{"location":"archetype_definitions/#Contents","page":"Input data reference","title":"Contents","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Pages = [\"archetype_definitions.md\"]\nDepth = 3","category":"page"},{"location":"archetype_definitions/#Object-classes","page":"Input data reference","title":"Object classes","text":"","category":"section"},{"location":"archetype_definitions/#building_archetype","page":"Input data reference","title":"building_archetype","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Represents a portion of the building stock, aggregated based on the related elements. Results in a lumped-capacitance thermal model of the defined archetype building.","category":"page"},{"location":"archetype_definitions/#building_fabrics","page":"Input data reference","title":"building_fabrics","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Represents the building fabrics like walls, floors, ceilings, interior air, etc., as well as how they are represented as a network of lumped-capacitance nodes.","category":"page"},{"location":"archetype_definitions/#building_loads","page":"Input data reference","title":"building_loads","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Contains information about the internal heat loads and demands of buildings.","category":"page"},{"location":"archetype_definitions/#building_node","page":"Input data reference","title":"building_node","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Represents individual lumped-capacitances for building fabrics, as well as for building technical systems.","category":"page"},{"location":"archetype_definitions/#building_period","page":"Input data reference","title":"building_period","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Represents a period of time between a start year and an end year for the statistical data.","category":"page"},{"location":"archetype_definitions/#building_process","page":"Input data reference","title":"building_process","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Represents energy conversion and transfer processes between lumped-capacitances in the building technical systems.","category":"page"},{"location":"archetype_definitions/#building_scope","page":"Input data reference","title":"building_scope","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines aggregation for the building stock over time, geographical location, building type, and heat source.","category":"page"},{"location":"archetype_definitions/#building_stock","page":"Input data reference","title":"building_stock","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Represents a particular building stock dataset.","category":"page"},{"location":"archetype_definitions/#building_systems","page":"Input data reference","title":"building_systems","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Represents building technical systems via processes and lumped-capacitance nodes.","category":"page"},{"location":"archetype_definitions/#building_type","page":"Input data reference","title":"building_type","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Classification for different types of buildings.","category":"page"},{"location":"archetype_definitions/#building_weather","page":"Input data reference","title":"building_weather","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Represents weather for the archetype buildings.","category":"page"},{"location":"archetype_definitions/#direction","page":"Input data reference","title":"direction","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Direction of process commodity flows, either into or from nodes.","category":"page"},{"location":"archetype_definitions/#heat_source","page":"Input data reference","title":"heat_source","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Classification for primary energy sources for heating/cooling systems.","category":"page"},{"location":"archetype_definitions/#location_id","page":"Input data reference","title":"location_id","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Geographical location identifier.","category":"page"},{"location":"archetype_definitions/#structure_type","page":"Input data reference","title":"structure_type","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Classification for different building envelope structures.","category":"page"},{"location":"archetype_definitions/#Object-parameters","page":"Input data reference","title":"Object parameters","text":"","category":"section"},{"location":"archetype_definitions/#average_apparent_sky_temperature_difference_K","page":"Input data reference","title":"average_apparent_sky_temperature_difference_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average difference between external air temperatures and sky temperatures [K], default value based on EN ISO 52016-1:2017 Table B.19.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 11","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#average_structural_solar_absorption_coefficient","page":"Input data reference","title":"average_structural_solar_absorption_coefficient","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average solar absorption coefficient for external opaque surfaces, default based on EN ISO 52016-1:2017 Table B.14.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.6","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#building_frame_depth_m","page":"Input data reference","title":"building_frame_depth_m","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average depth of the building. Default value based on an industry rule-of-thumb regarding natural light conditions (Rakenteellinen energiatehokkuus - Opas, 2015).","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 10.4","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#effective_thermal_capacity_of_interior_air_and_furniture_J_m2K","page":"Input data reference","title":"effective_thermal_capacity_of_interior_air_and_furniture_J_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed effective thermal capacity [J/m2K gross-floor area]  of interior air and furniture. Default value based on SFS-EN ISO 52016-1:2017 Table B.17.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 10000.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#energy_efficiency_override_multiplier","page":"Input data reference","title":"energy_efficiency_override_multiplier","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"A coefficient that can be used to tweak the overall energy efficiency of the archetype building. Essentially multiplies all heat transfer coefficients related to ambient heat losses, as well as self-discharge coefficients. Default value of 1, zero would remove all losses.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 1.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#external_radiative_surface_heat_transfer_coefficient_W_m2K","page":"Input data reference","title":"external_radiative_surface_heat_transfer_coefficient_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed external radiative surface heat transfer coefficient [W/m2K], default value based on EN ISO 13789:2017 Table 8.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 4.14","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#external_shading_coefficient","page":"Input data reference","title":"external_shading_coefficient","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average external shading coefficient, effectively a factor for the amount of direct solar radiation reaching the windows. Default value based Final report - Average EU building heat load for HVAC equipment, Delft, 2014.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.65","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#external_wall_load_bearing_fraction","page":"Input data reference","title":"external_wall_load_bearing_fraction","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average fraction of external walls that are load-bearing. Default value guesstimated.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.5","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#indoor_air_cooling_set_point_override_K","page":"Input data reference","title":"indoor_air_cooling_set_point_override_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Option for overriding nodal maximum indoor air temperature on an archetype level in K.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#indoor_air_heating_set_point_override_K","page":"Input data reference","title":"indoor_air_heating_set_point_override_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Option for overriding nodal minimum indoor air temperature on an archetype level in K.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#internal_heat_gain_convective_fraction","page":"Input data reference","title":"internal_heat_gain_convective_fraction","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed fraction of convective over radiative internal heat gains. Convective heat gains are applied directly to the interior air and furniture, while radiative heat gains are applied to surrounding structures. Default value based on SFS-EN ISO 52016-1:2017 Table B.11.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.4","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#number_of_storeys","page":"Input data reference","title":"number_of_storeys","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average number of storeys.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 2.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#partition_wall_length_ratio_to_external_walls_m_m","page":"Input data reference","title":"partition_wall_length_ratio_to_external_walls_m_m","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average length ratio of internal partition walls compared to the external walls [m/m].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.5","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#partition_wall_load_bearing_fraction","page":"Input data reference","title":"partition_wall_load_bearing_fraction","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average fraction of internal partition walls that are load-bearing.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.5","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#room_height_m","page":"Input data reference","title":"room_height_m","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average room height in metres.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 2.5","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#solar_heat_gain_convective_fraction","page":"Input data reference","title":"solar_heat_gain_convective_fraction","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed fraction of convective over radiative solar heat gains. Convective heat gains are applied directly to the interior air and furniture, while radiative heat gains are applied to surrounding structures. Default value based on IDA ESBO calibrations.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.6","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#volumetric_heat_capacity_of_interior_air_J_m3K","page":"Input data reference","title":"volumetric_heat_capacity_of_interior_air_J_m3K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Isobaric volumetric heat capacity of air at approximately room temperature ~20C. Default value based on Wikipedia.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 1210.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#weather_end","page":"Input data reference","title":"weather_end","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The time for the end of the weather period, as a yyyy-mm-dd string. Month and day can be skipped.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#weather_start","page":"Input data reference","title":"weather_start","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The time for the beginning of the weather period, as a yyyy-mm-dd string. Month and day can be skipped.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#window_area_distribution_towards_cardinal_directions","page":"Input data reference","title":"window_area_distribution_towards_cardinal_directions","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed distribution of window area towards the cardinal directions. By default, window area is assumed to be distributed equally towards all cardinal directions.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: Dict{String, Any}(\"data\" => Any[Any[\"horizontal\", 0.0], Any[\"north\", 0.25], Any[\"east\", 0.25], Any[\"south\", 0.25], Any[\"west\", 0.25]], \"type\" => \"map\", \"index_name\" => \"cardinal_direction\", \"index_type\" => \"str\")","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#window_area_thermal_bridge_surcharge_W_m2K","page":"Input data reference","title":"window_area_thermal_bridge_surcharge_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"A factor for estimating the linear thermal bridges from fenestration, essentially an addition to the fenestration U-value. Default value based on EN ISO 13789:2017 Table B.6.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.1","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#window_area_to_external_wall_ratio_m2_m2","page":"Input data reference","title":"window_area_to_external_wall_ratio_m2_m2","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Assumed average ratio between external wall surface area and the surface area of windows [m2/m2]. Default value loosely based on Final report --- Average EU building heat load for HVAC equipment (2014) and RAKENTEELLINEN ENERGIATEHOKKUUS --- OPAS (2015).","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.1","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#window_non_perpendicularity_correction_factor","page":"Input data reference","title":"window_non_perpendicularity_correction_factor","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"A correction factor for estimating the total solar energy transmittance of windows from the normal solar energy transmittance. Default value based on SFS-EN ISO 52016-1:2017 Table B.43.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_archetype","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.9","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#domestic_hot_water_demand_base_W","page":"Input data reference","title":"domestic_hot_water_demand_base_W","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Base component of total domestic hot water demand [W].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_loads","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#domestic_hot_water_demand_gfa_scaling_W_m2","page":"Input data reference","title":"domestic_hot_water_demand_gfa_scaling_W_m2","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Gross-floor-area-scaling component of total domestic hot water demand [W/m2 gross-floor area].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_loads","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#internal_heat_loads_base_W","page":"Input data reference","title":"internal_heat_loads_base_W","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Base component of total internal heat loads [W].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_loads","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#internal_heat_loads_gfa_scaling_W_m2","page":"Input data reference","title":"internal_heat_loads_gfa_scaling_W_m2","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Gross-floor-area-scaling component of total internal heat loads [W/m2 gross-floor area].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_loads","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#domestic_hot_water_demand_weight","page":"Input data reference","title":"domestic_hot_water_demand_weight","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Weight for how much of the domestic hot water demand is allocated for this node.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#effective_thermal_mass_base_J_K","page":"Input data reference","title":"effective_thermal_mass_base_J_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Define the base component of total effective thermal mass of the node by hand [J/K].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#effective_thermal_mass_gfa_scaling_J_m2K","page":"Input data reference","title":"effective_thermal_mass_gfa_scaling_J_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Define the gross-floor-area-scaling component of total effective thermal mass of the node by hand [J/m2K]","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#interior_air_and_furniture_weight","page":"Input data reference","title":"interior_air_and_furniture_weight","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Weight for how much of the interior air and furniture is included in this node.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#maximum_permitted_temperature_K","page":"Input data reference","title":"maximum_permitted_temperature_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Maximum allowed temperature for the node [K].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 400.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#minimum_permitted_temperature_K","page":"Input data reference","title":"minimum_permitted_temperature_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Minimum allowed temperature for the node [K].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 200.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#self_discharge_rate_base_W_K","page":"Input data reference","title":"self_discharge_rate_base_W_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Define the base component of total self-discharge rate of the node [W/K], where energy is lost outside the model scope.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#self_discharge_rate_gfa_scaling_W_m2K","page":"Input data reference","title":"self_discharge_rate_gfa_scaling_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Define the gross-floor-area-scaling component of total self-discharge rate of the node [W/m2K], where energy is lost outside the model scope.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#period_end","page":"Input data reference","title":"period_end","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_period","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#period_start","page":"Input data reference","title":"period_start","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_period","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#coefficient_of_performance_base","page":"Input data reference","title":"coefficient_of_performance_base","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The base coefficient of performance for the building_process. For temperature-dependent COPs, this parameter needs to be the COP at known reference temperatures, divided by the Carnot COP at those same temperatures.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_process","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 1.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#coefficient_of_performance_minimum_temperature_delta","page":"Input data reference","title":"coefficient_of_performance_minimum_temperature_delta","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The minimum assumed temperature raise/decrease in the heat pump process, limiting the maximum Carnot COP of the process. This parameter matters only if source and sink temperatures are defined.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_process","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 5.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#coefficient_of_performance_mode","page":"Input data reference","title":"coefficient_of_performance_mode","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The mode of the heat pump process, affecting how the source and sink temperatures are interpreted. Set to cooling for heat pumpts used for cooling.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_process","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: heating","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: COP_modes","category":"page"},{"location":"archetype_definitions/#coefficient_of_performance_sink_temperature_K","page":"Input data reference","title":"coefficient_of_performance_sink_temperature_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The sink temperature for the heat pump process, defined as a Map. Use ambient and ground for weather dependent temperature_K, while the rest of the properties can be used to tweak the assumed heating curve.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_process","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: Dict{String, Any}(\"data\" => Any[Any[\"temperature_K\", nothing], Any[\"heating_curve_control_temperature_min_K\", nothing], Any[\"heating_curve_control_temperature_max_K\", nothing], Any[\"heating_curve_output_temperature_min_K\", nothing], Any[\"heating_curve_output_temperature_max_K\", nothing]], \"type\" => \"map\", \"index_name\" => \"property\", \"index_type\" => \"str\")","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#coefficient_of_performance_source_temperature_K","page":"Input data reference","title":"coefficient_of_performance_source_temperature_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The source temperature for the heat pump process, defined as a Map. Use ambient and ground for weather dependent temperature_K, while the rest of the properties can be used to tweak the assumed heating curve.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_process","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: Dict{String, Any}(\"data\" => Any[Any[\"temperature_K\", nothing], Any[\"heating_curve_control_temperature_min_K\", nothing], Any[\"heating_curve_control_temperature_max_K\", nothing], Any[\"heating_curve_output_temperature_min_K\", nothing], Any[\"heating_curve_output_temperature_max_K\", nothing]], \"type\" => \"map\", \"index_name\" => \"property\", \"index_type\" => \"str\")","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#scope_period_end_year","page":"Input data reference","title":"scope_period_end_year","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Last year [y] of the construction time period to be included in the statistical scope.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_scope","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#scope_period_start_year","page":"Input data reference","title":"scope_period_start_year","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"First year [y] of the construction time period to be included in the statistical scope.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_scope","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#building_stock_year","page":"Input data reference","title":"building_stock_year","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The year this building_stock is supposed to represent, like a snapshot of the building stock during this year.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_stock","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#raster_weight_path","page":"Input data reference","title":"raster_weight_path","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"An optional filepath to a geographical raster data file containing weighting information for the weather data, e.g. population density or the like.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_stock","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#shapefile_path","page":"Input data reference","title":"shapefile_path","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The filepath to a shapefile containing the geographical information about the building stock. Required for weather data processing.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_stock","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#ambient_temperature_K","page":"Input data reference","title":"ambient_temperature_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Ambient air temperature [K].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_weather","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#diffuse_solar_irradiation_W_m2","page":"Input data reference","title":"diffuse_solar_irradiation_W_m2","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Diffuse solar irradiation [W/m2].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_weather","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#direct_solar_irradiation_W_m2","page":"Input data reference","title":"direct_solar_irradiation_W_m2","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Direct solar irradiation on walls facing towards the cardinal directions [W/m2].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_weather","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: Dict{String, Any}(\"data\" => Any[Any[\"horizontal\", 0.0], Any[\"north\", 0.0], Any[\"east\", 0.0], Any[\"south\", 0.0], Any[\"west\", 0.0]], \"type\" => \"map\", \"index_name\" => \"cardinal_direction\", \"index_type\" => \"str\")","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#location_name","page":"Input data reference","title":"location_name","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Name of the location corresponding to the identifier, e.g. the name of the municipality, region, country, etc.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: location_id","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#exterior_resistance_m2K_W","page":"Input data reference","title":"exterior_resistance_m2K_W","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Exterior surface thermal resistance of a structure [m2K/W].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#interior_resistance_m2K_W","page":"Input data reference","title":"interior_resistance_m2K_W","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Interior surface thermal resistance of a structure [m2K/W].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#is_internal","page":"Input data reference","title":"is_internal","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"A boolean flag for whether a structure type is internal, meaning inside the building envelope and not directly in contact with ambient conditions.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#is_load_bearing","page":"Input data reference","title":"is_load_bearing","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"A boolean flag for whether a structure type is load-bearing, meaning it is designed to bear the weight of structures on top of it.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: true","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#linear_thermal_bridge_W_mK","page":"Input data reference","title":"linear_thermal_bridge_W_mK","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Linear thermal bridges for the structure type [W/mK] caused by seams between structures.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#structure_type_notes","page":"Input data reference","title":"structure_type_notes","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Generic notes about the different structure types.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#Objects","page":"Input data reference","title":"Objects","text":"","category":"section"},{"location":"archetype_definitions/#@system_link_node_1","page":"Input data reference","title":"@system_link_node_1","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Reserved special node intended to be used to link the archetype building systems to the desired connection point in the overarching energy system model, defined using the building_archetype__system_link_node relationship class.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/#@system_link_node_2","page":"Input data reference","title":"@system_link_node_2","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Reserved special node intended to be used to link the archetype building systems to the desired connection point in the overarching energy system model, defined using the building_archetype__system_link_node relationship class.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/#@system_link_node_3","page":"Input data reference","title":"@system_link_node_3","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Reserved special node intended to be used to link the archetype building systems to the desired connection point in the overarching energy system model, defined using the building_archetype__system_link_node relationship class.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: building_node","category":"page"},{"location":"archetype_definitions/#from_node","page":"Input data reference","title":"from_node","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Direction of energy flow from a node into a process.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: direction","category":"page"},{"location":"archetype_definitions/#to_node","page":"Input data reference","title":"to_node","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Direction of energy flow from a process and into a node.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: direction","category":"page"},{"location":"archetype_definitions/#base_floor","page":"Input data reference","title":"base_floor","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"The base floor of the building, in contact with either the ground or some form of ventilated crawlspace.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/#exterior_wall","page":"Input data reference","title":"exterior_wall","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Potentially load-bearing envelope walls of the building, in direct contact with ambient air.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/#light_exterior_wall","page":"Input data reference","title":"light_exterior_wall","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Non-load-bearing envelope walls of the building, in direct contact with ambient air.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/#light_partition_wall","page":"Input data reference","title":"light_partition_wall","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Non-load-bearing walls within the building envelope, not in contact with ambient conditions.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/#partition_wall","page":"Input data reference","title":"partition_wall","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Potentially load-bearing walls within the building envelope, not in contact with ambient conditions.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/#roof","page":"Input data reference","title":"roof","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Roof of the building envelope, in contact with ambient air.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/#separating_floor","page":"Input data reference","title":"separating_floor","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Floors dividing storeys within the building envelope, not in contact with ambient conditions.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object class: structure_type","category":"page"},{"location":"archetype_definitions/#Relationship-classes","page":"Input data reference","title":"Relationship classes","text":"","category":"section"},{"location":"archetype_definitions/#building_archetype__building_fabrics","page":"Input data reference","title":"building_archetype__building_fabrics","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines which building fabric representation is used for the chosen archetype building.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingarchetype, and buildingfabrics","category":"page"},{"location":"archetype_definitions/#building_archetype__building_loads","page":"Input data reference","title":"building_archetype__building_loads","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines the internal heat loads for the archetype building.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingarchetype, and buildingloads","category":"page"},{"location":"archetype_definitions/#building_archetype__building_scope","page":"Input data reference","title":"building_archetype__building_scope","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines the statistical scope of the archetype building.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingarchetype, and buildingscope","category":"page"},{"location":"archetype_definitions/#building_archetype__building_systems","page":"Input data reference","title":"building_archetype__building_systems","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines the heating/cooling systems used by the archetype building.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingarchetype, and buildingsystems","category":"page"},{"location":"archetype_definitions/#building_archetype__building_weather","page":"Input data reference","title":"building_archetype__building_weather","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines the weather for the archetype building.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingarchetype, and buildingweather","category":"page"},{"location":"archetype_definitions/#building_archetype__system_link_node","page":"Input data reference","title":"building_archetype__system_link_node","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines how the archetype building is connected to overarching models using the reserved @system_link_nodes.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingarchetype, and buildingnode","category":"page"},{"location":"archetype_definitions/#building_fabrics__building_node","page":"Input data reference","title":"building_fabrics__building_node","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines which nodes make up the representation of the building fabrics.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingfabrics, and buildingnode","category":"page"},{"location":"archetype_definitions/#building_node__building_node","page":"Input data reference","title":"building_node__building_node","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Allows configuring heat transfer coefficients between building nodes by hand. Useful for e.g. heating/cooling system definitions.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingnode, and buildingnode","category":"page"},{"location":"archetype_definitions/#building_node__structure_type","page":"Input data reference","title":"building_node__structure_type","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines which structures are included in which nodes, as well as their weights within those nodes.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingnode, and structuretype","category":"page"},{"location":"archetype_definitions/#building_process__direction__building_node","page":"Input data reference","title":"building_process__direction__building_node","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines how processes interact with building nodes, as well as sets process-flow specific technical parameters.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingprocess, direction, and buildingnode","category":"page"},{"location":"archetype_definitions/#building_scope__building_stock","page":"Input data reference","title":"building_scope__building_stock","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines which building_stock datasets are used in the statistical scope, as well as their weights.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingscope, and buildingstock","category":"page"},{"location":"archetype_definitions/#building_scope__building_type","page":"Input data reference","title":"building_scope__building_type","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines the building types included in the statistical scope, as well as their weights.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingscope, and buildingtype","category":"page"},{"location":"archetype_definitions/#building_scope__heat_source","page":"Input data reference","title":"building_scope__heat_source","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines the heat sources included in the statistical scope, as well as their weights.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingscope, and heatsource","category":"page"},{"location":"archetype_definitions/#building_scope__location_id","page":"Input data reference","title":"building_scope__location_id","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines the geographical locations included in a statistical scope, as well as their weights.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingscope, and locationid","category":"page"},{"location":"archetype_definitions/#building_stock_statistics","page":"Input data reference","title":"building_stock_statistics","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Contains the statistical data about the composition of the building stock.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingstock, buildingtype, buildingperiod, locationid, and heat_source","category":"page"},{"location":"archetype_definitions/#building_systems__building_node","page":"Input data reference","title":"building_systems__building_node","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines which lumped-capacitance nodes are included in the building systems.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingsystems, and buildingnode","category":"page"},{"location":"archetype_definitions/#building_systems__building_process","page":"Input data reference","title":"building_systems__building_process","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Defines which processes are included in the building systems.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingsystems, and buildingprocess","category":"page"},{"location":"archetype_definitions/#structure_statistics","page":"Input data reference","title":"structure_statistics","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Contains statistics about the properties of different structure types.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingtype, buildingperiod, locationid, and structuretype","category":"page"},{"location":"archetype_definitions/#ventilation_and_fenestration_statistics","page":"Input data reference","title":"ventilation_and_fenestration_statistics","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Contains statistics about thje properties of fenestration and ventilation.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Object classes: buildingtype, buildingperiod, and location_id","category":"page"},{"location":"archetype_definitions/#Relationship-parameters","page":"Input data reference","title":"Relationship parameters","text":"","category":"section"},{"location":"archetype_definitions/#grid_name","page":"Input data reference","title":"grid_name","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Name of the Backbone grid this @system_link_node is included in.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_archetype__system_link_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#node_name","page":"Input data reference","title":"node_name","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Name of the node this @system_link_node is representing in the overarching large-scale energy system model.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_archetype__system_link_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#heat_transfer_coefficient_base_W_K","page":"Input data reference","title":"heat_transfer_coefficient_base_W_K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Set the base heat transfer coefficient between two nodes [W/K] by hand.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_node__building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#heat_transfer_coefficient_gfa_scaling_W_m2K","page":"Input data reference","title":"heat_transfer_coefficient_gfa_scaling_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Set the gross-floor-area-scaling heat transfer coefficient between two nodes [W/m2K] by hand.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_node__building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#structure_type_weight","page":"Input data reference","title":"structure_type_weight","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Weight or share of the structure type to be included in this node.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_node__structure_type","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 1.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#maximum_power_base_W","page":"Input data reference","title":"maximum_power_base_W","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Maximum base power of the process flow [W].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_process__direction__building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#maximum_power_gfa_scaling_W_m2","page":"Input data reference","title":"maximum_power_gfa_scaling_W_m2","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Gross-floor-area-scaling maximum power of a process flow [W/m2].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_process__direction__building_node","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#building_stock_weight","page":"Input data reference","title":"building_stock_weight","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Weight for sampling the building_stock within the building_scope.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_scope__building_stock","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 1.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#building_type_weight","page":"Input data reference","title":"building_type_weight","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Weight for sampling the building_type within the building_scope.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_scope__building_type","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 1.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#heat_source_weight","page":"Input data reference","title":"heat_source_weight","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Weight for sampling the heat_source within the building_scope.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_scope__heat_source","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 1.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#location_id_weight","page":"Input data reference","title":"location_id_weight","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Weight for sampling the location_id within the building_scope.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_scope__location_id","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 1.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#average_gross_floor_area_m2_per_building","page":"Input data reference","title":"average_gross_floor_area_m2_per_building","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Statistical average gross-floor-area per building [m2].","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_stock_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#number_of_buildings","page":"Input data reference","title":"number_of_buildings","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Statistical number of buildings.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: building_stock_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#design_U_value_W_m2K","page":"Input data reference","title":"design_U_value_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean original design U-value [W/m2K] of the structures corresponding to the statistics.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: structure_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#effective_thermal_mass_J_m2K","page":"Input data reference","title":"effective_thermal_mass_J_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean calculated effective thermal mass [J/m2K] of the structures corresponding to the statistics, per area of the structure.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: structure_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#external_U_value_to_ambient_air_W_m2K","page":"Input data reference","title":"external_U_value_to_ambient_air_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean calculated U-value [W/m2K] from the structure into the ambient air.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: structure_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#external_U_value_to_ground_W_m2K","page":"Input data reference","title":"external_U_value_to_ground_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean calculated effective U-value [W/m2K] from the structure into the ground, according to KissockK2013.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: structure_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: 0.0","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#internal_U_value_to_structure_W_m2K","page":"Input data reference","title":"internal_U_value_to_structure_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean calculated U-value [W/m2K] from the structure into the interior air.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: structure_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#linear_thermal_bridges_W_mK","page":"Input data reference","title":"linear_thermal_bridges_W_mK","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean linear thermal bridges [W/mK] of the seams between structures.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: structure_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#total_U_value_W_m2K","page":"Input data reference","title":"total_U_value_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean total effective U-value [W/m2K] of the structure, from the interior air into the ambient air/ground.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: structure_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#HRU_efficiency","page":"Input data reference","title":"HRU_efficiency","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean heat-recovery efficiency of ventilation heat-recovery units corresponding to the statistics.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: ventilation_and_fenestration_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#infiltration_rate_1_h","page":"Input data reference","title":"infiltration_rate_1_h","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean infiltration air change rate [1/h] corresponding to the statistics.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: ventilation_and_fenestration_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#total_normal_solar_energy_transmittance","page":"Input data reference","title":"total_normal_solar_energy_transmittance","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean total normal solar energy transmittance of windows corresponding to the statistics, already including the effect of the frame-area fraction.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: ventilation_and_fenestration_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#ventilation_rate_1_h","page":"Input data reference","title":"ventilation_rate_1_h","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean ventilation air change rate [1/h] corresponding to the statistics.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: ventilation_and_fenestration_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"archetype_definitions/#window_U_value_W_m2K","page":"Input data reference","title":"window_U_value_W_m2K","text":"","category":"section"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Mean window U-value [W/m2K] corresponding to the statistics.","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Relationship class: ventilation_and_fenestration_statistics","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Default value: nothing","category":"page"},{"location":"archetype_definitions/","page":"Input data reference","title":"Input data reference","text":"Value list: nothing","category":"page"},{"location":"output_processing/#Input-data-processing-for-large-scale-energy-system-modelling-frameworks","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"","category":"section"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"This section aims to provide brief overviews of adapting the archetype building model for use in large-scale energy system modelling frameworks like Backbone and SpineOpt. In general, such frameworks are rarely designed with building modelling in mind, and as such don't support the building-specific data stored within ArchetypeBuilding and related structs without further processing. Perhaps the most important step is to understand the roles of AbstractNode and AbstractProcess as opposed to their detailed counterparts BuildingNodeData and BuildingProcessData.","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"The following Processing thermal nodes into AbstractNodes and Processing HVAC equipment into AbstractProcesses sections explain the aggregation and abstraction of building level data for energy-system-scale, while the  Backbone input data processing and SpineOpt input data processing sections focus on the processing workflows of their respective models models.","category":"page"},{"location":"output_processing/#Processing-thermal-nodes-into-AbstractNodes","page":"Input data processing for large-scale energy system modelling frameworks","title":"Processing thermal nodes into AbstractNodes","text":"","category":"section"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"BuildingNodeData has been designed to be as human-readable and understandable as possible from a building-domain point-of-view, including a plethora of different parameters related to archetype definitions, assumptions, sizing, etc. However, most of these parameters don't have counterparts in large-scale energy system models, and need to be aggregated into something meaningful. This is done via the ArchetypeBuildingModel.process_abstract_node function, aggregating all the separate categories of thermal mass, heat transfer, as well as ambient condition and external load related parameters into the bare essentials required for depicting the node in large-scale energy system modelling frameworks, represented by an AbstractNode.","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"note: Note\nSince ambient-temperature-related interactions are rarely directly supported by large-scale energy system modelling frameworks, they are re-cast into self-discharge and external load components as explained in the ArchetypeBuildingModel.process_abstract_node docstring.","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"As this abstraction reduces the amounts of different terms in the equations, it also happens to simplify Solving the baseline heating demand and HVAC equipment consumption, which is why the AbstractNodes are used for the calculations in the ArchetypeBuildingModel.solve_heating_demand function.","category":"page"},{"location":"output_processing/#Processing-HVAC-equipment-into-AbstractProcesses","page":"Input data processing for large-scale energy system modelling frameworks","title":"Processing HVAC equipment into AbstractProcesses","text":"","category":"section"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"Similar to BuildingNodeData, BuildingProcessData has been designed primarily with human-readability in mind, containing multiple parameters related to coefficients of performance, sizing of the systems, etc. However, for large-scale energy system model input, these are processed to their bare essentials via the ArchetypeBuildingModel.process_abstract_system function and stored as an AbstractProcess.","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"note: Note\nThe coefficient_of_performance and maximum_flows properties of the AbstractProcess account for the number_of_processes and W -> MW scaling for the total conversion from energy-system- to archetype-building-scale, making the units of measurement not immediately obvious. If you want to avoid this scaling, the easiest way to bypass it is to model 1,000,000 identical buildings, in which case the W -> MW scaling negates itself.","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"Again, this abstraction happens to simplify Solving the baseline heating demand and HVAC equipment consumption, thus making use of the AbstractProcess in the ArchetypeBuildingModel.solve_consumption function.","category":"page"},{"location":"output_processing/#Backbone-input-data-processing","page":"Input data processing for large-scale energy system modelling frameworks","title":"Backbone input data processing","text":"","category":"section"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"This section aims to provide an overview of the processing done for producing Backbone input data, explaining the logic of and functions withing src/create_backbone_input.jl.","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"The BackboneInput struct contains the relevant input data structure for representing the produced archetype building models within Backbone. The similarly named constructor takes as input a dictionary containing the defined building_archetype linked to its processed ArchetypeBuildingResults, loops over the archetypes, and adds them to the BackboneInput one by one. The actual processing is handled by the ArchetypeBuildingModel.add_archetype_to_input! function, which performs a lot of rather complicated manipulations to adapt the archetype building data for Backbone. For people familar with Backbone model structure, the key points are:","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"Each building_archetype is mapped into a grid.\nEach AbstractNode is mapped into a node in the corresponding archetype grid.\nEach AbstractProcess in each building_archetype is mapped into a unique unit.\nSystem link nodes defined by building_archetype__system_link_node relationships and the associated node_name and grid_name are created to serve as connection points to potential energy system datasets.","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"Since ArchetypeBuildingModel.jl is based on SpineInterface.jl, the produced Backbone input is saved in its Spine Datastore format, and requires the use of Spine Toolbox and the associated tools contained within the Backbone repository in order to produce the inputData.gdx for running the model. Additionally, the backbone_utils/export_auxiliary_building_data.json exporter specification can be used for exporting useful .gdx data not directly used by Backbone.","category":"page"},{"location":"output_processing/#SpineOpt-input-data-processing","page":"Input data processing for large-scale energy system modelling frameworks","title":"SpineOpt input data processing","text":"","category":"section"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"This section aims to provide and overview of the processing done for producing SpineOpt input data, explaining the logic and functions within src/create_spineopt_input.jl.","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"The SpineOptInput struct contains the relevant input data structure for representing the produced archetype building models within SpineOpt. The similarly named constructor takes as input a dictionary containing the defined building_archetype linked to its processed ArchetypeBuildingResults, loops over the archetypes, and adds them to the SpineOptInput one by one. The actual processing is handled by the ArchetypeBuildingModel.add_archetype_to_input! function, which essentially maps the AbstractNode and AbstractProcess parameters to their SpineOpt  counterparts. For people familiar with SpineOpt, the key points are:","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"Each AbstractNode in each building_archetype is mapped into a unique node.\nEach AbstractProcess in each building_archetype is mapped into a unique unit.\nSystem link nodes defined by building_archetype__system_link_node relationships and the associated node_name are created to serve as connection points to potential energy system datasets.","category":"page"},{"location":"output_processing/","page":"Input data processing for large-scale energy system modelling frameworks","title":"Input data processing for large-scale energy system modelling frameworks","text":"Since both ArchetypeBuildingModel.jl and SpineOpt are based on SpineInterface.jl, the produced SpineOpt input data is immediately compatible. However, note that the produced SpineOpt input data only contains the data describing the modelled building stock, without all the necessary definitions to run the model in any meaningful way.","category":"page"},{"location":"defining_archetype_buildings/#Defining-archetype-buildings","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"","category":"section"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"This section aims to go over the key components of the Input data reference and explain how these components are used to define the archetype building lumped-capacitance thermal models. The explanations remain at a pretty high level, but links to the appropriate sections of the Input data reference and Library sections are provided for readers interested in the technical details.","category":"page"},{"location":"defining_archetype_buildings/#The-building_archetype-definition","page":"Defining archetype buildings","title":"The building_archetype definition","text":"","category":"section"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The single most important object class in the definitions, as each building_archetype object essentially represents a single synthetic average archetype building lumped-capacitance thermal model to be created. In the end, the rest of the object classes used for defining different aspects of the archetype buildings are each connected to a building_archetype using the appropriate relationship classes:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"building_archetype__building_scope: Defines one building_scope for the building_archetype. Determines the geographical and statistical scope, e.g. the number, gross-floor area, and structural properties of the archetype based on aggregating the underlying building stock statistics.\nbuilding_archetype__building_fabrics: Defines one building_fabrics for the building_archetype. Determines how the different types of structures and the indoor air and furniture are aggregated into a lumped-capacitance thermal model depicting the archetype.\nbuilding_archetype__building_systems: Defines one building_systems for the building_archetype. Determines the HVAC system of the archetype.\nbuilding_archetype__building_loads: Defines one building_loads for the building_archetype. Determines the internal loads and domestic hot water demand for the archetype.\nbuilding_archetype__building_weather: Defines which building_weather to use for the building_archetype. If left undefined, the ArchetypeBuildingWeather.py sub-module will be used to try and automatically fetch and process weather data based on the building_scope and other parameters.\nbuilding_archetype__system_link_node: Allows customizable definition of nodes intended to be used as the connection points between the lumped-capacitance thermal models and the overarching large-scale energy system models.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_archetype objects also houses most of the parameters defining assumptions regarding the archetype and how it's modelled. The only mandatory parameters are the weather_start and weather_end, which are required for automatic weather data processing using ArchetypeBuildingWeather.py, while the rest of the parameters have set default values that kick in if not specified by the user. For example, the assumed shape of the building envelope can be tweaked using e.g. building_frame_depth_m, number_of_storeys, room_height_m, and window_area_to_external_wall_ratio_m2_m2. Similarly, some assumptions related to the modelling can be tweaked here, e.g. effective_thermal_capacity_of_interior_air_and_furniture_J_m2K, external_shading_coefficient, or internal_heat_gain_convective_fraction. See the Object parameters section for a comprehensive list of all the possible parameters for the building_archetype.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"Ultimately, each building_archetype is processed into an ArchetypeBuilding by the main program described by the Overview of the workflow section.","category":"page"},{"location":"defining_archetype_buildings/#The-building_scope-definition","page":"Defining archetype buildings","title":"The building_scope definition","text":"","category":"section"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"Arguably the second-most important object class in the definiton, as each building_scope object describes how to aggregate the underlying building stock statistics to calculate the properties of a synthetic average archetype building. Essentially, the building_scope object tells which building_stock data to use, and which building_types, heat_sources, and location_ids to include, and from what period of time. Similar to how The building_archetype definition works, the building_scope is also defined largely by connecting the desired pieces to it using the appropriate relationship classes:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"building_archetype__building_scope: Defines one building_scope for the building_archetype. Determines the geographical and statistical scope, e.g. the number, gross-floor area, and structural properties of the archetype based on aggregating the underlying building stock statistics.\nbuilding_scope__building_stock: Defines which building_stock data to use, and with what weights. Allows e.g. pseudo-interpolating data for years between recorded building_stock years.\nbuilding_scope__building_type: Defines which building_types to include and are represented by the building_scope, with user-defined weights if desired.\nbuilding_scope__heat_source: Defines which heat_sources to include and are represented by the building_scope, with user-defined weights if desired.\nbuilding_scope__location_id: Defines which location_ids to include and are represented by the building_scope, with user-defined weights if desired.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"Unlike the rest of the geographical and statistical scope definitions, the temporal aggregation is handled via parameters instead of relationships. This is done to facilitate selection of the desired time periods without having to look into the underlying data to know of the exact time periods used in the statistical data. Similarly, the years for the ventilation and structural properties rarely match the time periods for the building stock statistics, and can be sampled as easily using parameters instead. For this purpose, the building_scope has the two mandatory parameters:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"scope_period_start_year: The first year included in the building_scope.\nscope_period_end_year: The last year included in the building_scope.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"Ultimately, each building_scope is processed into a ScopeData by the main program described by the Overview of the workflow section.","category":"page"},{"location":"defining_archetype_buildings/#The-building_fabrics-definition","page":"Defining archetype buildings","title":"The building_fabrics definition","text":"","category":"section"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_fabrics objects are used to define how the building_archetype envelope, interior structures, and interior air and furniture are modelled. Essentially, it defines the temperature nodes of the structural components of the building for the lumped-capacitance thermal model of the archetype. Different building_fabrics are relatively lightweight to define, but they rely heavily on The building_node definitions, which are discussed in the following subsection. Regardless, building_fabrics are simply collections of building_node using the following relationship classes:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"building_archetype__building_fabrics: Defines one building_fabrics for the building_archetype. Determines how the different types of structures and the indoor air and furniture are aggregated into a lumped-capacitance thermal model depicting the archetype.\nbuilding_fabrics__building_node: Defines the building_nodes constituting this building_fabrics.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_fabrics definitions help form the EnvelopeData during the data processing by the main program, described by the Overview of the workflow section.","category":"page"},{"location":"defining_archetype_buildings/#The-building_node-definition","page":"Defining archetype buildings","title":"The building_node definition","text":"","category":"section"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_node objects are used to define the temperature nodes for the lumped-capacitance thermal models, whether they be a part of the building_fabrics, e.g. building envelope structures, or the building_systems, e.g. a domestic hot water storage tank. Due to their rather abstract nature, building_nodes have quite a few different ways they can be defined, depending on the desired purpose. Regardless, the principles remain similar to above, and most of the building_node definitions are handled via the following relationship classes:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"building_archetype__system_link_node: Designates whether the building_node is a special system link node, meaning that it is used as the connection point between the generated lumped-capacitance thermal model and the overarching large-scale energy models. Note that only the @system_link_node_1 etc. should ever be used for this relationship class.\nbuilding_fabrics__building_node: Defines the building_nodes constituting the building_fabrics.\nbuilding_node__building_node: Allows user-defined custom heat transfer coefficients between building_nodes. Should only be necessary for more advanced use-cases.\nbuilding_node__structure_type: Defines which structure_types (if any) are included on this building_node, affecting its effective thermal mass and heat transfer coefficients between the interior and exterior of the archetype. User-defined structure_type_weights can be provided to tweak the model further, but shouldn't be necessary for basic use-cases.\nbuilding_process__direction__building_node: Defines how building_processes interact with the building_nodes, and houses their maximum power flow parameters.\nbuilding_systems__building_node: Defines the building_nodes included in the building_systems.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_node object class also contains a few important parameters. A comperehensive list can be found in the Object parameters section, but the most important ones are:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"domestic_hot_water_demand_weight: Defines the share of the total domestic hot water demand attributed to this building_node. Typically set to either zero or one, but e.g. if the DHW tank is modelled using several nodes, tweaking the value might be necessary.\ninterior_air_and_furniture_weight: Defines the share of the total interior air and furniture attributed to this building_node, affecting its effective thermal mass, heat transfer coefficients due to ventilation/infiltration and windows, etc. Typically set to either zero or one, but if multi-zone modelling is attempted (not recommended), tweaking the value might be necessary.\nmaximum_permitted_temperature_K and minimum_permitted_temperature_K are used to set the temperature limits for the node.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"Ultimately, each building_node is processed into a BuildingNodeData (and an AbstractNode for energy system model export) by the main program described by the Overview of the workflow section.","category":"page"},{"location":"defining_archetype_buildings/#The-building_systems-definition","page":"Defining archetype buildings","title":"The building_systems definition","text":"","category":"section"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_systems objects are used to define different heating/cooling systems for the archetype buildings. They are similar to building_fabrics in the sense that they rely heavily on more detailed definitions for building_nodes and building_processs via these relationship classes:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"building_archetype__building_systems: Defines one building_systems for the building_archetype. Determines the HVAC system of the archetype.\nbuilding_systems__building_node: Defines building_nodes parts of this building_systems, e.g. a domestic hot water storage tank.\nbuilding_systems__building_process: Defines building_processs parts of this building_systems, e.g. a direct electric resistance heater or a heat pump.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_node definition is already explained in the sections above, but building_processes are extremely important for building_systemss.","category":"page"},{"location":"defining_archetype_buildings/#The-building_process-definition","page":"Defining archetype buildings","title":"The building_process definition","text":"","category":"section"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_process objects are used to define energy transfer/transformation processes in the building_systems, e.g. direct electric resistance heaters or heat pumps. The important relationship classes for the definitions are:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"building_process__direction__building_node: Defines how building_processes interact with the building_nodes, and houses their maximum power flow parameters.\nbuilding_systems__building_process: Defines building_processs parts of this building_systems. Also houses the maximum power flow parameters for the process.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_process object class also contains a few important parameters, mostly due to the potential complexity of different heat pump systems. A comperehensive list can be found in the Object parameters section, but the most important ones are:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"coefficient_of_performance_base: The base COP of the process.\ncoefficient_of_performance_mode: Wherther the [building_process] is used for :heating or :cooling.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"See the ArchetypeBuildingModel.calculate_cop function for more details on how weather-dependent COPs are modelled.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"Ultimately, each building_process is processed into a BuildingProcessData (AbstractProcess for the energy sysem model export) by the main program described by the Overview of the workflow section.","category":"page"},{"location":"defining_archetype_buildings/#The-building_loads-definition","page":"Defining archetype buildings","title":"The building_loads definition","text":"","category":"section"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_loads objects are used to define the internal heat loads and domestic hot water demand for a building_archetype. The only relationship class necessary is the: ","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"`building_archetype__building_loads: Defines one building_loads for the building_archetype.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"For building_loads, all the important information is contained in the Object parameters:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"domestic_hot_water_demand_base_W: Fixed DHW demand data.\ndomestic_hot_water_demand_gfa_scaling_W_m2: Gross-floor area scaling DHW demand data.\ninternal_heat_loads_base_W: Fixed internal heat gains data.\ninternal_heat_loads_gfa_scaling_W_m2: Gross-floor area scaling internal heat gains data.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"Ultimately, each building_loads is processed into a LoadsData by the main program described by the Overview of the workflow section.","category":"page"},{"location":"defining_archetype_buildings/#The-building_weather-definition","page":"Defining archetype buildings","title":"The building_weather definition","text":"","category":"section"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"The building_weather objects are used for defining weather data for a building_archetype. Of all the definitions described in this section, it is the only non-required one. In case the relationship:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"building_archetype__building_weather: Defines which building_weather to use for the building_archetype.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"is left undefined, the ArchetypeBuildingWeather.py sub-module will be used in an attempt to automatically fetch and process the weather data necessary for creating the archetype lumped-capacitance thermal model.","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"In case the user wants to specify the weather data exactly, the following Object parameters are required:","category":"page"},{"location":"defining_archetype_buildings/","page":"Defining archetype buildings","title":"Defining archetype buildings","text":"ambient_temperature_K: The ambient temperature in [K].\ndiffuse_solar_irradiation_W_m2: The diffuse horisontal irradiation in [W/m2].\ndirect_solar_irradiation_W_m2: A Map specifying the direct irradiation for vertical surfaces facing in all four cardinal directions in [W/m2].","category":"page"},{"location":"library/#Library","page":"Library","title":"Library","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"Automatically generated documentation based on the docstrings in the codebase.","category":"page"},{"location":"library/#Index","page":"Library","title":"Index","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"","category":"page"},{"location":"library/#Public","page":"Library","title":"Public","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"This section lists all types and functions exported by the module.","category":"page"},{"location":"library/#Types","page":"Library","title":"Types","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"ArchetypeBuilding\nArchetypeBuildingResults\nBackboneInput\nBuildingProcessData\nEnvelopeData\nGenericInput\nLoadsData\nScopeData\nSpineOptInput\nWeatherData","category":"page"},{"location":"library/#ArchetypeBuildingModel.ArchetypeBuilding","page":"Library","title":"ArchetypeBuildingModel.ArchetypeBuilding","text":"ArchetypeBuilding(\n    archetype::Object;\n    mod::Module = @__MODULE__,\n    realization::Symbol = :realization,\n)\n\nContains data representing a single archetype building.\n\nThe ArchetypeBuilding struct stores the information about the objects used in its construction, the aggregated statistical and structural properties, as well as the BuildingNodeData and BuildingProcessData. Furthermore, the relevant AbstractNode and AbstractProcess used to create the large-scale energy system model input are also stored for convenience. The contents of the ArchetypeBuilding are intended to be as human-readable as possible to allow for inspecting the contents individually for debugging purposes.\n\nNOTE! The mod keyword changes from which Module data is accessed from by the constructor, @__MODULE__ by default.\n\nThis struct contains the following fields:\n\narchetype::Object: The building_archetype object corresponding to this ArchetypeBuilding.\nscope::Object: The defined building_scope for this archetype.\nfabrics::Object: The defined building_fabrics for this archetype.\nsystems::Object: The defined building_systems for this archetype.\nloads::Object: The defined building_loads for this archetype.\nweather::Object: The defined building_weather for this archetype.\nscope_data::ScopeData: The processed building_scope data for this archetype.\nenvelope_data::EnvelopeData: The processed envelope properties of this archetype.\nbuilding_nodes::BuildingNodeNetwork: The temperature node network depicting this archetype.\nbuilding_processes::Dict{Object,BuildingProcessData}: The processes in this archetype.\nloads_data::LoadsData: The loads defined for this archetype.\nweather_data::WeatherData: The processed weather data for this archetype.\nabstract_nodes::AbstractNodeNetwork: The processed AbstractNodes depicting this archetype.\nabstract_processes::Dict{Object,AbstractProcess}: The processed AbstractProcesses in this archetype.\n\nThe constructor performs the following steps:\n\nFetch and create the corresponding WeatherData.\nFetch and create the corresponding ScopeData.\nForm the EnvelopeData.\nProcess the LoadsData.\nProcess the temperature nodes using the create_building_node_network function.\nCreate the BuildingProcessData for the HVAC system components.\nProcess the abstract temperature nodes using the create_abstract_node_network function based on the BuildingNodeNetwork.\nCreate the AbstractProcesses corresponding to the BuildingProcessDatas.\nConstruct the final ArchetypeBuilding.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.ArchetypeBuildingResults","page":"Library","title":"ArchetypeBuildingModel.ArchetypeBuildingResults","text":"ArchetypeBuildingResults(\n    archetype::ArchetypeBuilding;\n    free_dynamics::Bool = false,\n    initial_temperatures::Union{Nothing,Dict{Object,Float64}} = nothing,\n    mod::Module = @__MODULE__,\n    realization::Symbol = :realization,\n) <: BuildingDataType\n\nStore the temperature and HVAC demand results for the archetype building.\n\nThe free_dynamics keyword can be used to force the calculations to ignore heating/cooling set points, while the initial_temperatures keyword can be used to fix the initial temperatures for the simulation. The realization keyword is used to select the true data from potentially stochastic input.\n\nNOTE! The mod keyword changes from which Module data is accessed from by the constructor, @__MODULE__ by default.\n\nThis struct contains the following fields:\n\narchetype::ArchetypeBuilding: The ArchetypeBuilding for which the results were calculated.\nfree_dynamics::Bool: Flag whether or not to ignore set point temperatures for free temperature dynamics.\ninitial_temperatures::Dict{Object,Float64}: The initial temperatures used for the results.\ntemperatures::Dict{Object,SpineDataType}: The resulting node temperatures in [K].\nhvac_demand::Dict{Object,SpineDataType}: The HVAC demand required to keep the temperature nodes within the permitted limits for each node.\nhvac_consumption::Dict{Object,SpineDataType}: The estimated energy consumption of the HVAC equipment required to fulfill the HVAC demand.\n\nThe constructor performs the following steps:\n\nSolve the initial temperatures, node temperatures, and HVAC demand using the solve_heating_demand function.\nSolve the HVAC consumption using the solve_consumption function.\nReturn the ArchetypeBuildingResults using the calculated values.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.BackboneInput","page":"Library","title":"ArchetypeBuildingModel.BackboneInput","text":"BackboneInput\n\nCreate and store the input data for the Backbone energy system model.\n\nContains the following fields:\n\nboundary::ObjectClass: Contains the upwardLimit and downwardLimit settings.\neffLevel::ObjectClass: All possible efficiency representation levels in Backbone.\neffSelector::ObjectClass: Contains the directOff efficiency representation used by the building model.\ngrid::ObjectClass: Contains the building grid for building nodes.\nio::ObjectClass: Contains the input and output indicators for units.\nnode::ObjectClass: Contains all the nodes in the building models, created based on AbstractNodes.\nunit::ObjectClass: Contains all the units in the building models, created based on AbstractProcesses.\nunittype::ObjectClass: Contains a HVAC type for all building units.\neffLevel__effSelector__unit::RelationshipClass: Attributes the directOff efficiency representation for all units for all efficiency representation levels.\ngrid__node::RelationshipClass: Connects all nodes into the building grid.\ngrid__node__boundary::RelationshipClass: Contains the upwardLimit and downwardLimit parameters for all nodes.\ngrid__node__node::RelationshipClass: Contains the diffCoeff diffusion parameters between the nodes.\ngrid__node__unit__io::RelationshipClass: Defines how the units interact with the nodes, and contains the necessary parameters.\nunit__unittype::RelationshipClass: Indicates all units as of type HVAC\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.BuildingProcessData","page":"Library","title":"ArchetypeBuildingModel.BuildingProcessData","text":"BuildingProcessData(\n    archetype::Object,\n    process::Object,\n    scope::ScopeData,\n    weather::WeatherData;\n    mod::Module = @__MODULE__,\n) <: BuildingDataType\n\nAggregate building systems into processes for the lumped-capacitance thermal model.\n\nThe BuildingProcessData struct aims to remain as human-readable as possible, making it a high-level description of the properties of a process in the lumped-capacitance thermal model. Ultimately, BuildingProcessDatas are converted into AbstractProcesss for exporting into energy-system-model-specific input data formats.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nThis struct contains the following fields:\n\nbuilding_process::Object: The building_process definition for this BuildingProcessData.\nsystem_link_nodes::Vector{Object}: The energy system nodes used to connect the buildings to the energy system at large.\ncoefficient_of_performance::SpineDataType: The coefficient of performance of the process.\ncoefficient_of_performance_mode::Symbol: The mode of the process, either :heating or :cooling.\nmaximum_power_base_W::Dict{Tuple{Object,Object},SpineDataType}: User-defined base maximum power flows in [W] between this process and the nodes.\nmaximum_power_gfa_scaled_W::Dict{Tuple{Object,Object},SpineDataType}: User-defined gross-floor-area-scaling maximum power flows in [W] between this process and the nodes.\nnumber_of_processes::Float64: The number of aggregated processes this one depicts for the large-scale energy system models.\n\nThe constructor calls the process_building_system function.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.EnvelopeData","page":"Library","title":"ArchetypeBuildingModel.EnvelopeData","text":"EnvelopeData(archetype::Object, data::ScopeData; mod::Module = @__MODULE__) <: BuildingDataType\n\nStore the calculated dimensions of the different parts of the building envelope.\n\nEnvelopeData is generated based on the building_archetype parameters and the aggregated ScopeData.\n\nNOTE! The mod keyword changes from which Module data is accessed from by the constructor, @__MODULE__ by default.\n\nThis struct contains the following fields:\n\nbase_floor::NamedTuple: Linear thermal bridge length [m] and surface area [m2] of the base floor.\nexterior_wall::NamedTuple: Linear thermal bridge length [m] and surface area [m2] of the load-bearing exterior walls.\nlight_exterior_wall::NamedTuple: Linear thermal bridge length [m] and surface area [m2] of the light exterior walls.\nlight_partition_wall::NamedTuple: Linear thermal bridge length [m] and one-sided surface area [m2] of the light partition walls.\npartition_wall::NamedTuple: Linear thermal bridge length [m] and one-sided surface area [m2] of the load-bearing partition walls.\nroof::NamedTuple: Linear thermal bridge length [m] and surface area [m2] of the roof.\nseparating_floor::NamedTuple: Linear thermal bridge length [m] and one-sided surface area [m2] of the partition floors.\nwindow::NamedTuple: Linear thermal bridge length [m] and surface area [m2] of the windows.\n\nThe constructor calls the process_building_envelope function and checks that the results are sensible.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.GenericInput","page":"Library","title":"ArchetypeBuildingModel.GenericInput","text":"GenericInput\n\nCreate and store the ArchetypeBuildingModel.jl structure for Spine Data Stores.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nContains the following fields:\n\nbuilding_archetype::ObjectClass: Stores ArchetypeBuilding information and definitions.\nbuilding_scope::ObjectClass: Stores ScopeData information and definitions.\nbuilding_weather::ObjectClass: Stores WeatherData information and definitions.\nbuilding_archetype__building_scope::RelationshipClass: Links ArchetypeBuilding to its corresponding ScopeData.\nbuilding_archetype__building_weather::RelationshipClass: Links ArchetypeBuilding to its corresponding WeatherData.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.LoadsData","page":"Library","title":"ArchetypeBuildingModel.LoadsData","text":"LoadsData(\n    archetype::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    weather::WeatherData;\n    mod::Module = @__MODULE__,\n) <: BuildingDataType\n\nStore the domestic hot water demand and internal/solar heat gains data.\n\nThe domestic hot water demand and internal gains are calculated based on the provided base and GFA-scaling parameters, while the solar gains are calculated based on the building_weather object.\n\nNOTE! The mod keyword changes from which Module data is accessed from by the constructor, @__MODULE__ by default.\n\nThis struct contains the following fields:\n\ndomestic_hot_water_demand_W::SpineDataType: Domestic hot water demand data in [W] for the building.\ninternal_heat_gains_W::SpineDataType: Total internal heat gains data in [W] for the building.\nsolar_heat_gains_W::SpineDataType: Total solar heat gain through windows data in [W] for the building.\nenvelope_solar_gains_W::Dict{Object,SpineDataType}: Solar heat gains through each structure type [W].\nenvelope_radiative_sky_losses_W::Dict{Object,SpineDataType}: Estimated radiative heat losses to the sky from the building envelope [W].\n\nThe constructor calls the process_building_loads function and checks that the results are sensible.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.ScopeData","page":"Library","title":"ArchetypeBuildingModel.ScopeData","text":"ScopeData(scope::Object; mod::Module = @__MODULE__) <: BuildingDataType\n\nAggregate and store data defined by a building_scope object.\n\nEssentially, stores information about the aggregated properties of the desired portion of the building stock, as defined by the building_scope object in the archetype building definition database.\n\nNOTE! The mod keyword changes from which Module data is accessed from by the constructor, @__MODULE__ by default.\n\nThis struct contains the following fields:\n\nbuilding_scope::Object: The building_scope used to define this ScopeData.\nnumber_of_buildings::Float64: Number of buildings included in this scope.\naverage_gross_floor_area_m2_per_building::Float64: Average GFA per building in [m2] of the buildings included in this scope.\nHRU_efficiency::Float64: Average ventilation heat-recovery unit efficiency of the buildings included in this scope.\ninfiltration_rate_1_h::Float64: Average infiltration rate in [1/h] of the buildings included in this scope.\ntotal_normal_solar_energy_transmittance::Float64: Average total normal solar energy transmittance of the windows included in this scope.\nventilation_rate_1_h::Float64: Average ventilation rate in [1/h] of the buildings included in this scope.\nwindow_U_value_W_m2K::Float64: Average window U-value in [W/m2K] of the buildings included in this scope.\nstructure_data::Dict{Object,StructureData}: StructureData dictionary for the average structural parameters of the buildings included in this scope.\nlocation_id_gfa_weights::Dict{Object,Float64}: Gross-floor area weights for the location_ids included in this scope, used for automatic weather data processing.\nshapefile_path::String: Path to a shapefile describing the geography of this scope, used for the automatic weather data aggregation.\nraster_weight_path::Union{String,Nothing}: Optional path to a raster weight map for tweaking the automatic weather data aggregation.\n\nThe constructor essentially performs the following steps:\n\nProcess building stock statistics using the process_building_stock_scope function.\nProcess ventilation and fenestration statistics using the process_ventilation_and_fenestration_scope function.\nProcess structure statistics using the process_structure_scope function.\nCheck that the values make sense.\nCreate the ScopeData.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.SpineOptInput","page":"Library","title":"ArchetypeBuildingModel.SpineOptInput","text":"SpineOptInput\n\nCreate and store the input data for the SpineOpt energy system model.\n\nContains the following fields:\n\nnode::ObjectClass: Contains all the nodes in the building models, created based on AbstractNodes.\nunit::ObjectClass: Contains all the units in the building models, created based on AbstractProcesses.\nnode__node::RelationshipClass: Defines the heat transfer coefficients between the nodes.\nunit__from_node::RelationshipClass: Defines unit input flow properties.\nunit__to_node::RelationshipClass: Defines unit output flow properties.\nunit__node__node::RelationshipClass: Defines unit conversion properties.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.WeatherData","page":"Library","title":"ArchetypeBuildingModel.WeatherData","text":"WeatherData(\n    weather::Object;\n    mod::Module = @__MODULE__,\n    realization::Symbol = :realization,\n) <: BuildingDataType\n\nProcess and store the weather data for further calculations.\n\nNOTE! The mod keyword changes from which Module data is accessed from by the constructor, @__MODULE__ by default. The realization scenario is required for effective ground temperature calculations.\n\nThis struct contains the following fields:\n\nbuilding_weather::Object: The building_weather object used to construct this WeatherData.\nambient_temperature_K::SpineDataType: Ambient temperature data in [K].\nground_temperature_K::SpineDataType: Effective ground temperature data in [K].\ndiffuse_solar_irradiation_W_m2::SpineDataType: Diffuse solar irradiation data in [W/m2].\ndirect_solar_irradiation_W_m2::Dict{Symbol,SpineDataType}: Direct solar irradiation data dictionary, containing irradiation for walls facing in different cardinal directions in [W/m2].\n\nEssentially, the constructor calls the process_weather function, and checks that the resulting values are sensible.\n\n\n\n\n\n","category":"type"},{"location":"library/#Functions","page":"Library","title":"Functions","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"add_results!\narchetype_building_processing\ncreate_abstract_node_network\ncreate_building_node_network\ncreate_building_weather\ninitialize_result_classes!\nrun_input_data_tests\nrun_object_class_tests\nrun_parameter_tests\nrun_structure_type_tests\nsolve_archetype_building_hvac_demand\nwrite_to_url","category":"page"},{"location":"library/#ArchetypeBuildingModel.add_results!","page":"Library","title":"ArchetypeBuildingModel.add_results!","text":"add_results!(\n    results__building_archetype__building_node::RelationshipClass,\n    results__building_archetype__building_process::RelationshipClass,\n    results__system_link_node::ObjectClass,\n    results_dictionary::Dict{Object,ArchetypeBuildingResults};\n    mod::Module = @__MODULE__\n)\n\nAdd results from `results_dictionary` into the result `RelationshipClass`es.\n\nNOTE! The `mod` keyword changes from which Module data is accessed from,\n`@__MODULE__` by default.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.archetype_building_processing","page":"Library","title":"ArchetypeBuildingModel.archetype_building_processing","text":"archetype_building_processing(\n    weather_url::String,\n    save_layouts::Bool;\n    weather_data_dictionary::Union{Nothing,Dict{Object,WeatherData}} = nothing,\n    mod::Module = @__MODULE__,\n    realization::Symbol = :realization,\n)\n\nProcess the ScopeData, WeatherData, and ArchetypeBuilding objects.\n\nEssentially, processes all the necessary information for ArchetypeBuilding creation, and returns the scope_data_dictionary, weather_data_dictionary, and archetype_dictionary for examining the processed data. Any automatically generated building_weather objects will be imported back into the database at weather_url. If save_layouts == true, diagnostic figures of the layouts are saved into figs/. The weather_data_dictionary keyword can be used to bypass weather data processing if a pre-existing dictionary is provided. The mod keyword changes from which Module data is accessed from, @__MODULE__ by default. The realization keyword is used to indicate the true data from potentially stochastic input.\n\nThis function performs the following steps:\n\nConstruct the ScopeData for each defined building_archetype__building_scope, and store in the scope_data_dictionary.\nTry to construct the WeatherData for each defined building_archetype__building_weather, and attempt automatic weather processing using ArchetypeBuildingWeather.py if no definition found. Results stored in weather_data_dictionary.\nUse the scope_data_dictionary and weather_data_dictionary to construct the ArchetypeBuilding for all defined archetypes, and store them in archetype_dictionary.\nReturn scope_data_dictionary, weather_data_dictionary, and archetype_dictionary.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.create_abstract_node_network","page":"Library","title":"ArchetypeBuildingModel.create_abstract_node_network","text":"create_abstract_node_network(\n    building_node_network::BuildingNodeNetwork,\n    weather::WeatherData\n)\n\nProcess a BuildingNodeNetwork into an AbstractNodeNetwork.\n\nThe AbstractNodeNetwork is a useful step for creating model-agnostic input for multiple large-scale energy system models. weather is required to account for ambient temperatures.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.create_building_node_network","page":"Library","title":"ArchetypeBuildingModel.create_building_node_network","text":"create_building_node_network(\n    archetype::Object,\n    fabrics::Object,\n    systems::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    loads::LoadsData;\n    mod::Module = @__MODULE__,\n)\n\nMap all archetype building_nodes to their BuildingNodeDatas.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, loops over the building_fabrics__building_node and building_systems__building_node relationships for the desired archetype, and collects all the building_nodes and BuildingNodeDatas into a BuildingNodeNetwork dictionary.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.create_building_weather","page":"Library","title":"ArchetypeBuildingModel.create_building_weather","text":"create_building_weather(\n    archetype::Object,\n    scopedata::ScopeData;\n    ignore_year::Bool = false,\n    repeat::Bool = true,\n    save_layouts::Bool = true,\n    mod::Module = @__MODULE__,\n)\n\nTry to create building_weather automatically using ArchetypeBuildingWeather.py.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially tries to automatically fetch weather data from ERA5 using the PYPSA/atlite python library, and aggregate it according to the GIS data indicated via the shapefile_path and raster_weight_path parameters for the building_stock objects. The desired weather period needs to be indicated using the building_archetype weather_start and weather_end parameters, and weighting is done based on the building_scope, the shapefile at shapefile_path, and the optional raster data at raster_weight_path.\n\nThe optional ignore_year and repeat keywords are used to control the corresponding flags of the created SpineInterface.TimeSeries. By default, the created TimeSeries are year-aware and repeating. The save_layouts keyword is used to control whether the layouts used for weighting the weather data are saved for diagnostics.\n\nReturns a new building_weather object, as well as a dictionary containing its parameter values.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.initialize_result_classes!","page":"Library","title":"ArchetypeBuildingModel.initialize_result_classes!","text":"initialize_result_classes!(mod::Module)\n\nInitialize RelationshipClasses and ObjectClasses for storing heating and HVAC demand results in mod.\n\nNote that this function modifies mod directly!\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.run_input_data_tests","page":"Library","title":"ArchetypeBuildingModel.run_input_data_tests","text":"run_input_data_tests(mod::Module = @__MODULE__)\n\nRuns input data tests for the Datastore loaded to module mod, @__MODULE__ by default.\n\nEssentially performs the following steps:\n\nCall run_object_class_tests\nCall run_parameter_tests\nCall run_structure_type_tests\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.run_object_class_tests","page":"Library","title":"ArchetypeBuildingModel.run_object_class_tests","text":"run_object_class_tests(mod::Module = @__MODULE__; limit::Real = Inf)\n\nRun tests for archetype building model definition ObjectClasses for module mod. The limit keyword can be used to limit the number of tests run.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.run_parameter_tests","page":"Library","title":"ArchetypeBuildingModel.run_parameter_tests","text":"run_parameter_tests(mod::Module = @__MODULE__; limit::Real = Inf)\n\nRun tests for archetype building model definition Parameters for module mod. The limit keyword can be used to limit the number of tests run.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.run_structure_type_tests","page":"Library","title":"ArchetypeBuildingModel.run_structure_type_tests","text":"run_structure_type_tests(mod::Module = @__MODULE__)\n\nEnsure that structure_type contains the correct objects.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.solve_archetype_building_hvac_demand","page":"Library","title":"ArchetypeBuildingModel.solve_archetype_building_hvac_demand","text":"solve_archetype_building_hvac_demand(\n    archetype_dictionary::Dict{Object,ArchetypeBuilding};\n    free_dynamics::Bool = false,\n    initial_temperatures::Dict{Object,Dict{Object,Float64}} = Dict{\n        Object,\n        Dict{Object,Float64}\n    }(),\n    realization::Symbol = :realization,\n)\n\nSolve the ArchetypeBuilding heating and cooling demand.\n\nThe free_dynamics keyword can be used to ignore node temperature limits, while the initial_temperatures keyword can be used to set desired initial temperatures for the nodes. The realization keyword is used to denote the true data from potentially stochastic input.\n\nEssentially, performs the following steps:\n\nCreate the archetype_results_dictionary by constructing the ArchetypeBuildingResults for each entry in the archetype_dictionary.\nCreate the results__building_archetype__building_node RelationshipClass for storing temperature results.\nCreate the results__building_archetype__building_process RelationshipClass for storing HVAC results.\nReturn the archetype_results_dictionary, as well as the created RelationshipClasses.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.write_to_url","page":"Library","title":"ArchetypeBuildingModel.write_to_url","text":"write_to_url(url::String, input::ModelInput; alternative::String=\"\")\n\nWrite model input data into the database at the url.\n\nThe alternative the parameter values are saved to depends on the given keyword\n\n\n\n\n\n","category":"function"},{"location":"library/#Internals","page":"Library","title":"Internals","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"This section lists all the internal types and functions not exported by the module.","category":"page"},{"location":"library/#Types-2","page":"Library","title":"Types","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"ArchetypeBuildingModel.AbstractNode\nArchetypeBuildingModel.AbstractNodeNetwork\nArchetypeBuildingModel.AbstractProcess\nArchetypeBuildingModel.BuildingDataType\nArchetypeBuildingModel.BuildingNodeData\nArchetypeBuildingModel.BuildingNodeNetwork\nArchetypeBuildingModel.StructureData","category":"page"},{"location":"library/#ArchetypeBuildingModel.AbstractNode","page":"Library","title":"ArchetypeBuildingModel.AbstractNode","text":"AbstractNode(\n    building_node_network::BuildingNodeNetwork,\n    node::Object,\n    weather::WeatherData,\n) <: BuildingDataType\n\nContain parameters defining a node in a large-scale-energy-system-model-agnostic manner.\n\nEssentially, a node is a point in a commodity network where commodity balance is observed. nodes can have a state, which represents accumulated commodities at the point. The state of a node can \"bleed\" either outside the model scope via the self_discharge_coefficient_kW_K, or into another nodes via the heat_transfer_coefficients_kW_K. The external_load_kW represents uncontrollable external influence affecting the node, e.g. commodity demand or gains.\n\nThis struct contains the following fields:\n\nbuilding_node::Object: The building_node definition this AbstractNode depicts.\nthermal_mass_kWh_K::SpineDataType: The effective thermal mass of this node in [kWh/K].\nself_discharge_coefficient_kW_K::SpineDataType: The self-discharge coefficient in [kW/K] from this node.\nheat_transfer_coefficients_kW_K::Dict{Object,SpineDataType}: The heat transfer coefficients between this node and other nodes in [kW/K].\nexternal_load_kW::SpineDataType: Heat loads/gains on this node due to external influende, e.g. ambient conditions, inhabitants, solar irradiation, etc.\nminimum_temperature_K::SpineDataType: Minimum permitted temperature of the node in [K].\nmaximum_temperature_K::SpineDataType: Maximum permitted temperature of the node in [K].\n\nThe constructor calls the process_abstract_node function.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.AbstractNodeNetwork","page":"Library","title":"ArchetypeBuildingModel.AbstractNodeNetwork","text":"AbstractNodeNetwork::Dict{Object,AbstractNode}\n\nDict mapping AbstractNodes to their corresponding building_nodes. \n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.AbstractProcess","page":"Library","title":"ArchetypeBuildingModel.AbstractProcess","text":"AbstractProcess(process_data::BuildingProcessData; mod::Module = @__MODULE__) <: BuildingDataType\n\nContain parameters defining a process in a model-agnostic manner.\n\nEssentially, a process is a commodity transfer/conversion from one node to another. For the purposes of the ArchetypeBuildingModel.jl, processes only have two attributes of interest: The ratio between total input and total output, and the maximum flows to and from the connected nodes.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nThis struct contains the following fields:\n\nbuilding_process::Object: The building_process definition this AbstractProcess depicts.\nnumber_of_processes::Float64: The number of aggregated processes this one depicts for the large-scale energy system models.\ncoefficient_of_performance::SpineDataType: The coefficient of performance of this process.\nmaximum_flows::Dict{Tuple{Object,Object},SpineDataType}: The maximum flows to/from this process.\n\nThe constructor calls the process_abstract_system function.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.BuildingDataType","page":"Library","title":"ArchetypeBuildingModel.BuildingDataType","text":"BuildingDataType\n\nAbstract type for ArchetypeBuildingModel data structures.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.BuildingNodeData","page":"Library","title":"ArchetypeBuildingModel.BuildingNodeData","text":"BuildingNodeData(\n    archetype::Object,\n    node::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    loads::LoadsData;\n    mod::Module = @__MODULE__,\n) <: BuildingDataType\n\nContains data about how the structures and systems are aggregated into nodes for the lumped-capacitance thermal model.\n\nThe BuildingNodeData struct aims to remain as human-readable as possible, making it a high-level description for what the lumped-capacitance node contains. Ultimately, BuildingNodeDatas are converted into AbstractNodes for exporting into energy-system-model-specific input data formats.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nThis struct contains the following fields:\n\nbuilding_node::Object: The building_node definition used for this BuildingNodeData.\nthermal_mass_base_J_K::SpineDataType: Optional user-defined base effective thermal mass in [J/K] of the temperature node.\nthermal_mass_gfa_scaled_J_K::SpineDataType: Optional user-defined gross-floor-area-scaling effective thermal mass in [J/m2K] of the temperature node.\nthermal_mass_interior_air_and_furniture_J_K::Float64: The effective thermal mass contribution of the interior air and furniture on this temperature node.\nthermal_mass_structures_J_K::Float64: The effective thermal mass contribution of included structures on this temperature node.\nmaximum_temperature_K::SpineDataType: The maximum permitted temperature of the node.\nminimum_temperature_K::SpineDataType: The minimum permitted temperature of the node.\nself_discharge_base_W_K::SpineDataType: Optional user-defined base self-discharge rate in [W/K] of the temperature node.\nself_discharge_gfa_scaled_W_K::SpineDataType: Optional user-defined gross-floor-area-scaling self-discharge rate in [W/m2K] of the temperature node.\nheat_transfer_coefficients_base_W_K::Dict{Object,SpineDataType}: Optional user-defined base heat transfer coefficients between this node and other temperature nodes.\nheat_transfer_coefficients_gfa_scaled_W_K::Dict{Object,SpineDataType}: Optional user-defined gross-floor-area-scaling heat transfer coefficients between this node and other temperature nodes.\nheat_transfer_coefficient_structures_interior_W_K::Float64: The contribution of included structures on the heat transfer coefficient between this node and the interior air node.\nheat_transfer_coefficient_structures_exterior_W_K::Float64: The contribution of included structures on the heat transfer coefficients between this node and the ambient temperature.\nheat_transfer_coefficient_structures_ground_W_K::Float64: The contribution of included structures on the heat transfer coefficient between this node and the effective ground temperature.\nheat_transfer_coefficient_windows_W_K::Float64: Contribution of windows to the heat transfer coefficient from this node to the ambient air.\nheat_transfer_coefficient_ventilation_and_infiltration_W_K::Float64: Contribution of infiltration and ventilation on the heat transfer coefficient between this node and the ambient air.\nheat_transfer_coefficient_thermal_bridges_W_K::Float64: Contribution of linear thermal bridges on the heat transfer coefficient between this node and the ambient air.\ndomestic_hot_water_demand_W::SpineDataType: Domestic hot water demand in [W] on this node.\ninternal_heat_gains_air_W::SpineDataType: Convective part of internal heat gains on this node in [W].\ninternal_heat_gains_structures_W::SpineDataType: Radiative part of internal heat gains on this node in [W].\nsolar_heat_gains_air_W::SpineDataType: Convective part of solar heat gains through windows on this node in [W].\nsolar_heat_gains_structures_W::SpineDataType: Radiative part of solar heat gains through windows on this node in [W].\nsolar_heat_gains_envelope_W::SpineDataType: Solar heat gains through the opaque building envelope [W].\nradiative_envelope_sky_losses_W::SpineDataType: Radiative heat losses to the sky from the exposed parts of the building envelope [W].\ninterior_air_and_furniture_weight::Float64: The defined share of interior air and furniture assigned to this node.\n\nThe constructor calls the process_building_node function, and checks the values are sensible.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.BuildingNodeNetwork","page":"Library","title":"ArchetypeBuildingModel.BuildingNodeNetwork","text":"BuildingNodeNetwork::Dict{Object,BuildingNodeData}\n\nDict mapping BuildingNodeData to their corresponding building_node Objects.\n\n\n\n\n\n","category":"type"},{"location":"library/#ArchetypeBuildingModel.StructureData","page":"Library","title":"ArchetypeBuildingModel.StructureData","text":"StructureData <: BuildingDataType\n\nStore the important aggregated parameters for a structure type.\n\nThis type is used by the process_structure_scope function to store the gross-floor-area-averaged structural properties within the desired scope. Contains the following fields:\n\nstructure_type::Object: Type of the structure, e.g. base_floor or roof.\ndesign_U_value_W_m2K::Float64: Design U-value of the structure in [W/m2K].\neffective_thermal_mass_J_m2K::Float64: Effective thermal mass of the structure in [J/m2K].\nexternal_U_value_to_ambient_air_W_m2K::Float64: U-value from the structure to ambient air in [W/m2K].\nexternal_U_value_to_ground_W_m2K::Float64: U-value from the structure to ground in [W/m2K].\ninternal_U_value_to_structure_W_m2K::Float64: U-value from the structure to the interior air in [W/m2K].\nlinear_thermal_bridges_W_mK::Float64: Linear thermal bridges in the structure in [W/mK].\ntotal_U_value_W_m2K::Float64: Total U-value through the structure.\n\n\n\n\n\n","category":"type"},{"location":"library/#Functions-2","page":"Library","title":"Functions","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"ArchetypeBuildingModel._building_period_weight\nArchetypeBuildingModel._pyseries_to_timeseries\nArchetypeBuildingModel.add_archetype_to_input!\nArchetypeBuildingModel.add_system_link_node_parameters!\nArchetypeBuildingModel.aggregate_gfa_weights\nArchetypeBuildingModel.calculate_base_floor_dimensions\nArchetypeBuildingModel.calculate_cop\nArchetypeBuildingModel.calculate_convective_internal_heat_gains\nArchetypeBuildingModel.calculate_convective_solar_gains\nArchetypeBuildingModel.calculate_effective_ground_temperature\nArchetypeBuildingModel.calculate_envelope_solar_gains\nArchetypeBuildingModel.calculate_envelope_radiative_sky_losses\nArchetypeBuildingModel.calculate_exterior_wall_dimensions\nArchetypeBuildingModel.calculate_gross_floor_area_weights\nArchetypeBuildingModel.calculate_interior_air_and_furniture_thermal_mass\nArchetypeBuildingModel.calculate_total_thermal_bridge_heat_transfer_coefficient\nArchetypeBuildingModel.calculate_partition_wall_dimensions\nArchetypeBuildingModel.calculate_radiative_internal_heat_gains\nArchetypeBuildingModel.calculate_radiative_solar_gains\nArchetypeBuildingModel.calculate_roof_dimensions\nArchetypeBuildingModel.calculate_separating_floor_dimensions\nArchetypeBuildingModel.calculate_structural_exterior_heat_transfer_coefficient\nArchetypeBuildingModel.calculate_structural_ground_heat_transfer_coefficient\nArchetypeBuildingModel.calculate_structural_interior_heat_transfer_coefficient\nArchetypeBuildingModel.calculate_structural_thermal_mass\nArchetypeBuildingModel.calculate_total_dhw_demand\nArchetypeBuildingModel.calculate_total_envelope_solar_gains\nArchetypeBuildingModel.calculate_total_envelope_radiative_sky_losses\nArchetypeBuildingModel.calculate_total_internal_heat_loads\nArchetypeBuildingModel.calculate_total_solar_gains\nArchetypeBuildingModel.calculate_ventilation_and_infiltration_heat_transfer_coefficient\nArchetypeBuildingModel.calculate_vertical_envelope_surface_area\nArchetypeBuildingModel.calculate_window_dimensions\nArchetypeBuildingModel.calculate_window_heat_transfer_coefficient\nArchetypeBuildingModel.collect_leaf_values\nArchetypeBuildingModel.determine_temporal_structure\nArchetypeBuildingModel.form_and_invert_dynamics_matrix\nArchetypeBuildingModel.form_and_invert_hvac_matrix\nArchetypeBuildingModel.initialize_temperatures\nArchetypeBuildingModel.initialize_rhs\nArchetypeBuildingModel.load_definitions_template\nArchetypeBuildingModel.process_abstract_node\nArchetypeBuildingModel.process_abstract_system\nArchetypeBuildingModel.process_building_envelope\nArchetypeBuildingModel.process_building_loads\nArchetypeBuildingModel.process_building_node\nArchetypeBuildingModel.process_building_stock_scope\nArchetypeBuildingModel.process_building_system\nArchetypeBuildingModel.process_structure_scope\nArchetypeBuildingModel.process_ventilation_and_fenestration_scope\nArchetypeBuildingModel.process_weather\nArchetypeBuildingModel.solve_consumption\nArchetypeBuildingModel.solve_heating_demand\nArchetypeBuildingModel.solve_heating_demand_loop\nArchetypeBuildingModel.timeseries_to_backbone_map","category":"page"},{"location":"library/#ArchetypeBuildingModel._building_period_weight","page":"Library","title":"ArchetypeBuildingModel._building_period_weight","text":"_building_period_weight(building_period::Object, building_scope::Object; mod::Module = @__MODULE__)\n\nCalculate the weight of a building_period within a building_scope.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, represents whether the building_period bp is contained within scope_period_start_year – scope_period_end_year in its entirety [1], only partially (0,1), or if at all [0].\n\nw_textbp = textmaxleft( textmin left( fractextend_textscope - textstart_textbptextend_textbp - textstart_textbp fractextend_textbp - textstart_textscopetextend_textbp - textstart_textbp 1 right) 0 right)\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel._pyseries_to_timeseries","page":"Library","title":"ArchetypeBuildingModel._pyseries_to_timeseries","text":"_pyseries_to_timeseries(\n    pyseries::PyCall.PyObject;\n    ignore_year::Bool = false,\n    repeat::Bool = true,\n)\n\nConvert ArchetypeBuildingWeather.py output pandas.Series into a TimeSeries.\n\nThe optional keywords can be used to tweak how the TimeSeries is flagged. Default is a year-aware repeating timeseries.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.add_archetype_to_input!","page":"Library","title":"ArchetypeBuildingModel.add_archetype_to_input!","text":"add_archetype_to_input!(\n    backbone::BackboneInput,\n    result::ArchetypeBuildingResults;\n    mod::Module = @__MODULE__,\n)\n\nProcess and add the desired archetype building result into the backbone input.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nThis is a very long and rather complicated function, which essentially translates the information contained in the result ArchetypeBuildingResults into the data structure in backbone BackboneInput, so that it is understood by the Backbone energy system model. The key steps taken by this function are summarized below:\n\nMap the ArchetypeBuildingModel direction objects to Backbone io objects.\nCreate a grid object representing the archetype being processed and map the grids.\nMap the ArchetypeBuildingModel building_node objects to unique Backbone node objects.\nIdentify the necessary system link nodes, and add them into the set of Backbone node objects with the desired names.\nInclude all building nodes to the archetype grid, and connect the system link nodes to their desired grids.\nMap the ArchetypeBuildingModel building_process objects to unique Backbone unit objects.\nDetermine Backbone unit parameters based on AbstractProcess properties.\nSet the directOff efficiency representation for all units.\nDetermine Backbone grid__node parameters based on AbstractNode properties.\nDetermine Backbone grid__node__boundary parameters based on AbstractNode maximum and minimum permitted temperatures.\nDetermine Backbone grid__node__node parameters based on AbstractNode heat transfer coefficients.\nDetermine Backbone grid__node__unit__io parameters based on AbstractProcess maximum flows.\nSet the HVAC unittype for every unit.\n\n\n\n\n\nadd_archetype_to_input!(\n    spineopt::SpineOptInput,\n    result::ArchetypeBuildingResults;\n    mod::Module = @__MODULE__,\n)\n\nProcess and add the desired archetype building result into the spineopt input.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nThis is a very long and rather complicated function, which essentially translates the information contained in the result ArchetypeBuildingResults into the data structure in spineopt SpineOptInput, so that it is understood by the SpineOpt energy system model. The key steps taken by this function are summarized below:\n\nMap the ArchetypeBuildingModel building_node objects to unique SpineOpt node objects.\nIdentify the necessary system link nodes, and add them into the set of SpineOpt node objects with the desired names.\nMap the ArchetypeBuildingModel building_process objects to unique SpineOpt unit objects.\nDetermine SpineOpt node parameters based on the AbstractNode properties.\nDetermine SpineOpt node__node parameters based on the AbstractNode heat transfer coefficients.\nDetermine SpineOpt unit__from_node and unit__to_node parameters based on the AbstractProcess maximum flow parameters.\nDetermine SpineOpt unit__node__node parameters based on the AbstractProcess properties.\n\n\n\n\n\nadd_archetype_to_input!(\n    generic::GenericInput,\n    result::ArchetypeBuildingResults\n)\n\nAdd ArchetypeBuildingResults to GenericInput.\n\nEssentially goes over the fields of the contained ArchetypeBuilding and parses them into Map for Spine export.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.add_system_link_node_parameters!","page":"Library","title":"ArchetypeBuildingModel.add_system_link_node_parameters!","text":"add_system_link_node_parameters!(\n    backbone::BackboneInput,\n    results::Dict{Object,ArchetypeBuildingResults};\n    mod::Module = @__MODULE__,\n)\n\nAdd system link node parameters into BackboneInput.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.aggregate_gfa_weights","page":"Library","title":"ArchetypeBuildingModel.aggregate_gfa_weights","text":"aggregate_gfa_weights(gross_floor_area_weights::Dict{NTuple{5,Object},Float64})\n\nAggregate gross_floor_area_weights for ventilation/infiltration and weather data processing.\n\nEssentially, sums over the gross-floor area weights of unused dimensions to produce reduced sets of weights.\n\nw_textbtbplid = sum_textbphs w_textbsbtbplidhs \nw_textlid = sum_textbtbp w_textbtbplid\n\nwhere w_bs,bt,bp,lid,hs are the full gross-floor area weights calculated using calculate_gross_floor_area_weights.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_base_floor_dimensions","page":"Library","title":"ArchetypeBuildingModel.calculate_base_floor_dimensions","text":"calculate_base_floor_dimensions(\n    data::ScopeData,\n    storeys::Real,\n    frame_depth_m::Real\n)\n\nCalculate the base floor dimensions, assuming a rectangular building.\n\nEssentially, calculates the surface area of the base floor in [m2] A_bf, as well as the thermal bridge length [m] l_bf based on the known gross-floor area (GFA), the assumed number of storeys, and the assumed frame depth of the building. The thermal bridge length is simply assumed to correspond to the length of the perimeter of the base floor.\n\nA_textbf = fracA_textGFAn_textstoreys \nl_textbf = 2 left( fracA_textbfd_textframe + d_textframe right)\n\nwhere A_GFA is the gross-floor area of the building in [m2] based on the ScopeData, n_storeys is the assumed number_of_storeys, and d_frame is the assumed building_frame_depth_m.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_cop","page":"Library","title":"ArchetypeBuildingModel.calculate_cop","text":"calculate_cop(\n    weather::WeatherData,\n    COP_mode::Symbol,\n    process::Object;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the potentially time-varying coefficient of performance.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nUses the given COP_mode, sink_temperature_K, and source_temperature_K to calculate a potentially weather-dependent coefficient of performance. Based on the exergetic approach in EN 15316-4-2:2017 Annex D, where a known reference COP is extrapolated to unknown temperature ranges using the Carnot COP.\n\ntextCOP_T_textin T_textout = textCOP_textbase fracT_textoutT_textout - T_textin \ntextwhere  textCOP_textbase = fractextCOP_textreftextCOP_textcarnotref\n\nIf the source and sink temperatures are undefined, returns the defined base COP as the COP is assumed to be weather independent. See the archetype_definitions.json default values for sink_temperature_K and source_temperature_K for the different options how the COP can be made dependent on the weather.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_convective_internal_heat_gains","page":"Library","title":"ArchetypeBuildingModel.calculate_convective_internal_heat_gains","text":"calculate_convective_internal_heat_gains(\n    archetype::Object\n    loads::LoadsData,\n    interior_weight::Real;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the convective internal heat gains on the node in [W].\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, takes the given internal heat gain profile in loads and multiplies it with the share of interior air on this node as well as the assumed convective fraction of internal heat gains.\n\nPhi_textintconvn = w_textintn f_textintconv Phi_textint\n\nwhere w_int,n is the interior_air_and_furniture_weight of this node, f_int,conv is the assumed internal_heat_gain_convective_fraction, and Φ_int are the total internal heat gains of the building. See calculate_total_internal_heat_loads for how the total internal heat loads are calculated.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_convective_solar_gains","page":"Library","title":"ArchetypeBuildingModel.calculate_convective_solar_gains","text":"calculate_convective_solar_gains(\n    archetype::Object\n    loads::LoadsData,\n    interior_weight::Real;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the convective solar heat gains through windows on the node in [W].\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, takes the given solar heat gain profile in loads and multiplies it with the share of interior air on this node as well as the assumed convective fraction of solar heat gains.\n\nPhi_textsolconvn = w_textintn f_textsolconv Phi_textsol\n\nwhere w_int,n is the interior_air_and_furniture_weight of this node, f_sol,conv is the assumed solar_heat_gain_convective_fraction, and Φ_sol are the total solar heat gains into the building. See calculate_total_solar_gains for how the total solar heat gains are calculated.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_effective_ground_temperature","page":"Library","title":"ArchetypeBuildingModel.calculate_effective_ground_temperature","text":"calculate_effective_ground_temperature(\n    ambient_temp_K::SpineDataType;\n    coeff::Real = 1.7\n    realization::Symbol = :realization,\n)\n\nCalculate the effective ground temperature based on the ambient temperature.\n\nThe method used in this function is based on  Kissock et al., Simplified Model for Ground Heat Transfer from Slab-on-Grade buildings, ASHRAE Transactions 2013\n\nfraca * T_textambient annual average + T_textambient 3-month moving average1 + a\n\nwhere the default coeff is a=1.7.\n\nNOTE! The ambient temperature timeseries is assumed to repeat when calculating the annual and 3-month moving averages.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_envelope_solar_gains","page":"Library","title":"ArchetypeBuildingModel.calculate_envelope_solar_gains","text":"calculate_envelope_solar_gains(\n    archetype::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    weather::WeatherData;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the solar heat gains [W] per envelope structure_type.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nLoosely based on EN ISO 52016-1:2017 Section 6.5.6.3.5, approximately accounts for the incident solar irradiation, while approximate radiative sky heat losses from the envelope are handled via calculate_envelope_radiative_sky_losses. Solar heat gains through windows are handled via calculate_total_solar_gains.\n\nEssentially, the exterior of the surface is assumed to have negligible thermal mass, and the impact of the incident irradiation is applied to the structural node directly. The solar gains Φ_sol,st need to be calculated separately for each structure_type, as they are dependent on the exterior surface resistance:\n\nPhi_textsolst = R_textest U_textextst A_textst a_textsol left( I_textdiff + F_textshading fracsum_d in D_textst I_textdirdsum_d in D_textst 1 right)\n\nwhere R_e,st is the exterior_resistance_m2K_W of structure st, U_ext,st is the external_U_value_to_ambient_air_W_m2K of structure st, A_st is the surface area of the corresponding envelope structure (See EnvelopeData), a_sol is the assumed average_structural_solar_absorption_coefficient, I_diff is the diffuse_solar_irradiation_W_m2, F_shading is the assumed external_shading_coefficient, d represents either horizontal or cardinal directions, and I_dir,d is the direct_solar_irradiation_W_m2.\n\nNOTE! The walls are assumed to be distributed equally towards all the cardinal directions.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_envelope_radiative_sky_losses","page":"Library","title":"ArchetypeBuildingModel.calculate_envelope_radiative_sky_losses","text":"calculate_envelope_radiative_sky_losses(\n    archetype::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the envelope radiative sky losses [W] per structure_type.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nLoosely based on EN ISO 52016-1:2017 Section 6.5.13.3, approximately accounts for the radiative sky heat losses of the building envelope. Solar heat gains through the building envelope are handled via calculate_envelope_solar_gains.\n\nEssentially, the exterior of the surface is assumed to have negligible thermal mass, and the impact of radiative sky losses are applied to the structural node directly. The radiative sky heat losses Φ_sky,st are calculated for each structure as\n\nPhi_textskyst = R_textest U_textextst A_textst F_textskyst h_textre Delta T_textsky\n\nwhere R_e,st is the exterior_resistance_m2K_W of structure st, U_ext,st is the external_U_value_to_ambient_air_W_m2K of structure st, A_st is the surface area of the corresponding envelope structure (See EnvelopeData), F_sky,st is the assumed sky view factor (hardcoded for now) for structure st, h_re is the assumed external_radiative_surface_heat_transfer_coefficient_W_m2K, and ΔT_sky is the assumed average_apparent_sky_temperature_difference_K.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_exterior_wall_dimensions","page":"Library","title":"ArchetypeBuildingModel.calculate_exterior_wall_dimensions","text":"calculate_exterior_wall_dimensions(\n    vertical_envelope_area_m2::Real,\n    window::NamedTuple,\n    load_bearing_fraction::Real,\n    storeys::Real,\n    room_height_m::Real\n)\n\nCalculate the dimensions of exterior walls, assuming a rectangular building.\n\nThe exterior wall surface area [m2] A_ewlb is calculated simply as the difference between vertical envelope area and the window surface area. The linear thermal bridge length [m] includes the corners of the exterior walls. The results are provided for load-bearing and light exterior walls separately, based on the assumed load-bearing fraction of the external walls.\n\nA_textewlb = f_textlb left( A_textvertical envelope - A_textw right) \nl_textewlb = 4 f_textlb lceil n_textstoreys rceil h_textroom\n\nwhere f_lb is the assumed external_wall_load_bearing_fraction, A_vertical_envelope is the vertical envelope surface area of the building, A_w is the window surface area, n_storeys is the assumed number_of_storeys, and h_room is the assumed room_height_m. See calculate_vertical_envelope_surface_area and calculate_window_dimensions for how the vertical envelope and window areas are calculated.\n\nThe dimensions of light exterior walls are calculated similarly to the above, except that (1-f_lb) is used as the coefficient instead.\n\nReturns the load-bearing exterior wall dimensions first, and the light exterior wall dimensions second.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_gross_floor_area_weights","page":"Library","title":"ArchetypeBuildingModel.calculate_gross_floor_area_weights","text":"calculate_gross_floor_area_weights(\n    scope::Object,\n    relevant_building_stock_statistics::Vector,\n    building_period_weights::Dict{Object,T} where T <: Real;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the gross-floor area weights for the relevant_building_stock_statistics.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, returns a normalized weight for each relevant entry in the input data statistics, corresponding to how impactful it is when aggregating the properties for the given scope. The weights of the individual dimensions are assumed to be one, unless otherwise specified in The building_scope definition. Also returns the total number of buildings and the total weighted gross-floor area included in the building_scope.\n\nw_textbsbtbplidhs = fracw_textbs w_textbt w_textbp w_textlid w_texths n_textbsbtbplidhs A_textgfabsbtbplidhssum_bsbtbplidhs w_textbsbtbplidhs\n\nwhere w_bs is the building_stock_weight, w_bt is the building_type_weight, w_bp is the _building_period_weight, w_lid is the location_id_weight, w_hs is the heat_source_weight, n_bs,bt,bp,lid,hs is the number_of_buildings, and A_gfa is the average_gross_floor_area_m2_per_building.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_interior_air_and_furniture_thermal_mass","page":"Library","title":"ArchetypeBuildingModel.calculate_interior_air_and_furniture_thermal_mass","text":"calculate_interior_air_and_furniture_thermal_mass(\n    archetype::Object,\n    scope::ScopeData,\n    interior_weight::Real;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the effective thermal mass of interior air and furniture on node in [J/K].\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, the calculation is based on the gross-floor area [m2] of the archetype building, the assumed effective thermal capacity of interior air and furniture, and the assumed share of interior air and furniture weight  on the node.\n\nC_textintn = w_textintn c_textintgfa A_textgfa\n\nwhere w_int,n is the interior_air_and_furniture_weight on this building_node, c_int,gfa is the assumed effective_thermal_capacity_of_interior_air_and_furniture_J_m2K, and A_gfa is the gross-floor area of the building.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_total_thermal_bridge_heat_transfer_coefficient","page":"Library","title":"ArchetypeBuildingModel.calculate_total_thermal_bridge_heat_transfer_coefficient","text":"calculate_total_thermal_bridge_heat_transfer_coefficient(\n    archetype::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    interior_weight::Real;\n    mod::Module = @__MODULE__,\n)\n\nCalculate total thermal bridge heat transfer coefficient.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nThermal bridges are assumed to bypass the temperature node within the structure, and act as direct heat transfer between the indoor air and ambient conditions.\n\nH_Psin = w_textintn left( Delta U_textwtb A_w + sum_textst left l_textst Psi_textst right right)\n\nwhere w_int,n is the interior_air_and_furniture_weight of this node, ΔU_w,tb is the window_area_thermal_bridge_surcharge_W_m2K, A_w is the window surface area based on calculate_window_dimensions, st is the structure_type, l_st is the length of the linear thermal bridge of structure st, and Ψ_st is the linear_thermal_bridges_W_mK.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_partition_wall_dimensions","page":"Library","title":"ArchetypeBuildingModel.calculate_partition_wall_dimensions","text":"calculate_partition_wall_dimensions(\n    vertical_envelope_area_m2::Real,\n    partition_wall_ratio::Real,\n    load_bearing_fraction::Real\n)\n\nCalculate the partition wall dimensions, assuming a rectangular building.\n\nThe one-sided partition wall surface area [m2] is calculated based on the vertical envelope area of the building, and the assumed ratio between partition walls and vertical envelope. The linear thermal bridge length [m] is set to zero, as producing any actual estimation would require a lot more information about the layout of the building. The results are provided for load-bearing and light exterior walls separately, based on the assumed load-bearing faction.\n\nA_textpwlb = f_textlb r_textpw A_textvertical envelope \nl_textpwlb = 0\n\nwhere f_lb is the assumed partition_wall_load_bearing_fraction, r_pw is the assumed partition_wall_length_ratio_to_external_walls_m_m, and A_vertical_envelope is the vertical envelope area of the building. See calculate_vertical_envelope_surface_area for how the vertical envelope area is calculated.\n\nThe dimensions of light partition walls are calculated similarly to the above, except that (1-f_lb) is used as the coefficient instead.\n\nReturns the load-bearing partition wall dimensions first, and the light partition wall dimensions second.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_radiative_internal_heat_gains","page":"Library","title":"ArchetypeBuildingModel.calculate_radiative_internal_heat_gains","text":"calculate_radiative_internal_heat_gains(\n    archetype::Object,\n    node::Object,\n    envelope::EnvelopeData,\n    loads::LoadsData,\n    total_structure_area_m2::Real;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the radiative internal heat gains on the node in [W].\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, takes the given internal heat gain profile in loads and multiplies it with the assumed radiative fraction of internal heat gains. The radiative heat gains are assumed to be distributed across the structures  simply based on their relative surface areas. Note that currently, radiative internal heat gains are partially lost through windows!\n\nPhi_textintradn = (1 - f_textintconv) fracsum_textst in n w_textnst A_textstsum_textst A_textst Phi_textint\n\nwhere f_int,conv is the assumed internal_heat_gain_convective_fraction, st is the structure_type and n is this building_node, w_n,st is the structure_type_weight of the structure st on this node, A_st is the surface area of structure st, and Φ_int are the total internal heat gains of the building. See calculate_total_internal_heat_loads for how the total internal heat loads are calculated.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_radiative_solar_gains","page":"Library","title":"ArchetypeBuildingModel.calculate_radiative_solar_gains","text":"calculate_radiative_solar_gains(\n    archetype::Object,\n    node::Object,\n    envelope::EnvelopeData,\n    loads::LoadsData,\n    total_structure_area_m2::Real;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the radiative solar heat gains through windows on the node in [W].\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, takes the given solar heat gain profile in loads and multiplies it with the assumed radiative fraction of solar heat gains. The radiative heat gains are assumed to be distributed across the structures  simply based on their relative surface areas. Note that currently, radiative solar heat gains are partially lost through windows!\n\nPhi_textsolradn = (1 - f_textsolconv) fracsum_textst in n w_textnst A_textstsum_textst A_textst Phi_textsol\n\nwhere f_sol,conv is the assumed solar_heat_gain_convective_fraction, st is the structure_type and n is this building_node, w_n,st is the structure_type_weight of the structure st on this node, A_st is the surface area of structure st, and Φ_sol are the total solar heat gains into the building. See calculate_total_solar_gains for how the total solar heat gains are calculated.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_roof_dimensions","page":"Library","title":"ArchetypeBuildingModel.calculate_roof_dimensions","text":"calculate_roof_dimensions(\n    base_floor::NamedTuple,\n    storeys::Real,\n    frame_depth_m::Real\n)\n\nCalculate the roof dimensions assuming a rectangular building.\n\nEssentially, calculates the surface area of the roof in [m2] A_r, as well as the thermal bridge length [m] l_r based on the dimensions of the base floor. The thermal bridge length is simply assumed to correspond to the length of the perimeter of the roof, and in case of a partial top floor, the roof is divided into two separate surfaces, thus increasing the thermal bridge length.\n\nA_textr = A_textbf \nl_textr = begincases\nl_textbf qquad n_textstorey in mathbbN \nl_textbf + 2 d_textframe qquad n_textstorey notin mathbbN\nendcases\n\nwhere A_bf is the surface area of the base floor according to, l_bf is the thermal bridge (perimeter) length of the base floor, and d_frame is the assumed building_frame_depth_m. See calculate_base_floor_dimensions for how the base floor dimensions are calculated.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_separating_floor_dimensions","page":"Library","title":"ArchetypeBuildingModel.calculate_separating_floor_dimensions","text":"calculate_separating_floor_dimensions(\n    data::ScopeData,\n    base_floor::NamedTuple,\n    storeys::Real,\n    frame_depth_m::Real\n)\n\nCalculate the separating floor dimensions assuming a rectangular building.\n\nEssentially, calculates the one-sided surface area of the separating floors in [m2] A_sf, as well as the thermal bridge length [m] l_sf based on the known gross-floor area (GFA), the assumed number of storeys, and the dimensions of the base floor. The thermal bridge length is assumed to correspond to the length of the perimeter of the separating floors.\n\nA_textsf = A_textGFA - A_textbf \nl_textsf = begincases\nleft( lfloor n_textstoreys rfloor - 1 right) l_textbf quad  n_textstoreys in mathbbN \nleft( lfloor n_textstoreys rfloor - 1 right) l_textbf + 2 left( fracA_textbf (n_textstoreys - lfloor n_textstoreys rfloor)d_textframe + d_textframe right) quad  n_textstoreys notin mathbbN\nendcases\n\nwhere A_GFA is the gross-floor area of the building, A_bf is the surface area of the base floor, n_storeys is the assumed number_of_storeys, l_bf is the linear thermal bridge (perimeter) length of the base floor, and d_frame is the assumed building_frame_depth_m. See calculate_base_floor_dimensions) for how the base floor dimensions are calculated.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_structural_exterior_heat_transfer_coefficient","page":"Library","title":"ArchetypeBuildingModel.calculate_structural_exterior_heat_transfer_coefficient","text":"calculate_structural_exterior_heat_transfer_coefficient(\n    node::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    interior_weight::Real\n)\n\nCalculate the total exterior heat transfer coefficient of the structures in node in [W/K].\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, calculates the total heat transfer coefficient between the ambient air and the node containing the structures. Internal structures have no exterior heat transfer coefficient, as they are assumed to not be part of the building envelope. If an external structure is lumped together with the interior air node, it's internal heat transfer coefficient is attributed to its exterior heat transfer as well, but using this feature is not recommended!\n\nH_textextn = sum_textst in n w_textnst left( frac1U_textextst + fracw_intnU_textintst right)^-1 A_textst\n\nwhere st is the structure_type and n is the building_node, w_n,st is the structure_type_weight of the structure st on this node, U_ext,st is the external_U_value_to_ambient_air_W_m2K of structure st, w_int,n is the interior_air_and_furniture_weight of this node, U_int,st is the internal_U_value_to_structure_W_m2K of structure st, and A_st is the surface area of structure st.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_structural_ground_heat_transfer_coefficient","page":"Library","title":"ArchetypeBuildingModel.calculate_structural_ground_heat_transfer_coefficient","text":"calculate_structural_ground_heat_transfer_coefficient(\n    archetype::Object,\n    node::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the total ground heat transfer coefficient of the structures in node in [W/K].\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, calculates the total heat transfer coefficient between the ground and the node containing the structures according to the simplified method proposed by K.Kissock in: Simplified Model for Ground Heat Transfer from Slab-on-Grade Buildings, (c) 2013 ASHRAE\n\nH_textgrnn = left( 1 + fracd_textframe^2A_textbf right) sum_textst in n w_textnst U_textgrnst A_textst\n\nwhere d_frame is the assumed building_frame_depth_m, A_bf is the area according to calculate_base_floor_dimensions, st is the structure_type and n is the building_node, w_n,st is the structure_type_weight of the structure st on this node, U_grn,st is the external_U_value_to_ground_W_m2K of structure st, and A_st is the surface area of structure st. Note that the correction factor C = (length + width) / length = 1 + d_frame^2 / A_bf in the above equation assumes that d_frame < A_bf / d_frame. If d_frame > A_bf / d_frame, the correction term becomes 1 + A_bf / d_frame^2 instead.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_structural_interior_heat_transfer_coefficient","page":"Library","title":"ArchetypeBuildingModel.calculate_structural_interior_heat_transfer_coefficient","text":"calculate_structural_interior_heat_transfer_coefficient(\n    node::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    interior_weight::Real;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the total interior heat transfer coefficient of the structures in node in [W/K].\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, initializes the total heat transfer coefficient between the interior air node and the node containing the structures. For internal structures, the U-values for both the interior and exterior surface are used, effectively accounting for both sides of interior structures. If an external structure is lumped together with the interior air node, it's internal heat transfer coefficient is attributed to its exterior heat transfer instead, but using this feature is not recommended!\n\nH_textintn = begincases\n(1 - w_textintn) sum_textst in n w_textnst U_textintst A_textst qquad textst notin textinternal structures \n(1 - w_textintn) sum_textst in n w_textnst ( U_textintst + U_textextst ) A_textst qquad textst notin textinternal structures\nendcases\n\nwhere w_int,n is the interior_air_and_furniture_weight on this building_node n, st is the structure_type, w_n,st is the structure_type_weight of the structure st on this node, U_int,st is the internal_U_value_to_structure_W_m2K of structure st, and A_st is the surface area of structure st. A structure st is considered internal if the is_internal flag is true.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_structural_thermal_mass","page":"Library","title":"ArchetypeBuildingModel.calculate_structural_thermal_mass","text":"calculate_structural_thermal_mass(\n    node::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the effective thermal mass of the structures on node in [J/K].\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, sums the total effective thermal mass of the structures attributed to this node, accounting for their assigned weights.\n\nC_textnstr = sum_textst in n w_textnst c_textst A_textst\n\nwhere st is the structure_type and n is the building_node, w_n,st is the structure_type_weight of the structure st on this node, c_stis the effective_thermal_mass_J_m2K of the structure, and A_st is the surface area of the structure.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_total_dhw_demand","page":"Library","title":"ArchetypeBuildingModel.calculate_total_dhw_demand","text":"calculate_total_dhw_demand(loads::Object, scope::ScopeData; mod::Module = @__MODULE__)\n\nCalculate the total domestic hot water (DHW) demand.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, simply adds the fixed base DHW demand and the gross-floor-area-scaling DHW demand together for the given loads and scope.\n\nPhi_textDHW = Phi_textDHWbase + phi_textDHWgfa A_textgfa\n\nwhere Φ_DHW,base is the assumed domestic_hot_water_demand_base_W, Φ_DHW,gfa is the assumed domestic_hot_water_demand_gfa_scaling_W_m2, and A_gfa is the gross-floor area of the building.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_total_envelope_solar_gains","page":"Library","title":"ArchetypeBuildingModel.calculate_total_envelope_solar_gains","text":"calculate_total_envelope_solar_gains(\n    node::Object,\n    loads::LoadsData;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the total solar heat gain [W] through the opaque envelope on this node.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nPhi_textenvn = sum_st in n w_textnst Phi_textsolst\n\nw_n,st is the structure_type_weight of the structure st on this node n, and Φ_sol,st are the heat gains through envelope structures using calculate_envelope_solar_gains.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_total_envelope_radiative_sky_losses","page":"Library","title":"ArchetypeBuildingModel.calculate_total_envelope_radiative_sky_losses","text":"calculate_total_envelope_radiative_sky_losses(\n    node::Object,\n    loads::LoadsData;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the total radiative envelope sky heat losses [W] for this node.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nPhi_textskyn = sum_st in n w_textnst Phi_textskyst\n\nw_n,st is the structure_type_weight of the structure st on this node n, and Φ_sky,st are the envelope radiative sky heat losses using calculate_envelope_radiative_sky_losses.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_total_internal_heat_loads","page":"Library","title":"ArchetypeBuildingModel.calculate_total_internal_heat_loads","text":"calculate_total_internal_heat_loads(\n    loads::Object,\n    scope::ScopeData;\n    mod::Module = @__MODULE__\n)\n\nCalculate the total internal heat gains.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, simply adds the fixed base internal gains and the gross-floor-area-scaling DHW demand together for the given loads and scope.\n\nPhi_textint = Phi_textintbase + phi_textintgfa A_textgfa\n\nwhere Φ_int,base is the assumed internal_heat_loads_base_W, Φ_int,gfa is the assumed internal_heat_loads_gfa_scaling_W_m2, and A_gfa is the gross-floor area of the building.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_total_solar_gains","page":"Library","title":"ArchetypeBuildingModel.calculate_total_solar_gains","text":"calculate_total_solar_gains(\n    archetype::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    weather::WeatherData;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the total solar heat gains through the windows.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nLoosely based on EN ISO 52016-1:2017 6.5.13.2, accounting for the solar heat gains through the windows of the building. Solar heat gains through the envelope are handled via calculate_envelope_solar_gains.\n\nThe varying angle of incidence of the irradiation on the windows is accounted for using a very simple average non-perpendicularity factor. The frame-area fraction of the windows is accounted for in the solar energy transmittance, and window area distribution is handled using the shares towards cardinal directions.\n\nPhi_textsol = f_textnp g_textgl A_textw left( I_textdiff + F_textshading sum_d in textNESW w_d I_textdird right)\n\nwhere f_np is the assumed window_non_perpendicularity_correction_factor, g_gl is the total_normal_solar_energy_transmittance of the glazing, A_w is the area of the windows, I_diff is the diffuse_solar_irradiation_W_m2, F_shading is the assumed external_shading_coefficient, d represents the cardinal directions, w_d is the window_area_distribution_towards_cardinal_directions, and I_dir,d is the direct_solar_irradiation_W_m2.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_ventilation_and_infiltration_heat_transfer_coefficient","page":"Library","title":"ArchetypeBuildingModel.calculate_ventilation_and_infiltration_heat_transfer_coefficient","text":"calculate_ventilation_and_infiltration_heat_transfer_coefficient(\n    archetype::Object,\n    scope::ScopeData,\n    interior_weight::Real;\n    mod::Module = @__MODULE__,\n)\n\nCalculate ventilation and infiltration heat transfer coefficient.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nVentilation and infiltration are assumed to transfer heat directly between the interior and ambient air. Loosely based on EN ISO 52016-1:2017 6.5.10.1.\n\nH_textvenn = w_textintn A_textgfa h_textroom rho_textair frac (1 - eta_texthru) r_textven + r_textinf3600\n\nwhere w_int,n is the interior_air_and_furniture_weight of this node, A_gfa is the gross-floor area of the building, h_room is the assumed room_height_m, ρ_air is the assumed volumetric_heat_capacity_of_interior_air_J_m3K, η_hru is the HRU_efficiency (heat recovery unit), r_ven is the ventilation_rate_1_h, and r_inf is the infiltration_rate_1_h. The division by 3600 accounts for the unit conversion from J to Wh.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_vertical_envelope_surface_area","page":"Library","title":"ArchetypeBuildingModel.calculate_vertical_envelope_surface_area","text":"calculate_vertical_envelope_surface_area(\n    base_floor::NamedTuple,\n    separating_floor::NamedTuple,\n    room_height_m::Real,\n)\n\nCalculate the vertical envelope surface area [m2] assuming a rectangular building.\n\nAn auxiliary function used for window and exterior wall calculations.\n\nA_textvertical envelope = h_textroom left( l_textbf + l_textsf right)\n\nwhere h_room is the assumed room_height_m, l_bf is the linear thermal bridge (perimeter) length of the base floor, and l_sf is the linear thermal bridge (perimeter) length of any separating floors. See calculate_base_floor_dimensions and calculate_separating_floor_dimensions for how the dimensions of the base and separating floors are calculated.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_window_dimensions","page":"Library","title":"ArchetypeBuildingModel.calculate_window_dimensions","text":"calculate_window_dimensions(\n    vertical_envelope_area_m2::Real,\n    window_to_wall_ratio::Real\n)\n\nCalculate the window dimensions assuming a rectangular building.\n\nCalculates the window surface area [m2] A_w simply using the assumed window-to-wall ratio. The linear thermal bridge lenght l_w is set to zero, as it's not really applicable without significantly better information about the number and size of the individual windows.\n\nA_textw = w A_textvertical envelope \nl_textw = 0\n\nwhere w is the assumed window_area_to_external_wall_ratio_m2_m2, and A_vertical_envelope is the total vertical envelope area of the building. See calculate_vertical_envelope_surface_area for how the vertical envelope area is calculated.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.calculate_window_heat_transfer_coefficient","page":"Library","title":"ArchetypeBuildingModel.calculate_window_heat_transfer_coefficient","text":"calculate_window_heat_transfer_coefficient(\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    interior_weight::Real\n)\n\nCalculate the total heat transfer coefficient for windows.\n\nWindows are assumed to transfer heat directly between the indoor air and the ambient air.\n\nH_textwn = w_textintn U_textw A_textw\n\nwhere w_int,n is the interior_air_and_furniture_weight of this node, U_w is the window_U_value_W_m2K, and A_w is the surface area of the windows.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.collect_leaf_values","page":"Library","title":"ArchetypeBuildingModel.collect_leaf_values","text":"collect_leaf_values(x::T) where T ∈ {SpineDataType,AbstractArray,AbstractDict}\n\nReturns an Array of the leaf values contained in any SpineDataType.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.determine_temporal_structure","page":"Library","title":"ArchetypeBuildingModel.determine_temporal_structure","text":"determine_temporal_structure(\n    archetype::ArchetypeBuilding;\n    realization::Symbol = :realization,\n)\n\nCheck that external_load_kW timeseries are consistent in the AbstractNodeNetwork, and determine the time series indices and the delta_t.\n\nNote that the time series need to have a constant delta_t in order for the dynamic matrix to be time-invarying, speeding up the solving process significantly. The realization keyword is necessary to indicate the true data from potentially stochastic input.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.form_and_invert_dynamics_matrix","page":"Library","title":"ArchetypeBuildingModel.form_and_invert_dynamics_matrix","text":"form_and_invert_dynamics_matrix(archetype::ArchetypeBuilding, delta_t::Int64)\n\nForms and inverts the implicit Euler discretized dynamics matrix for the AbstractNodeNetwork.\n\nThe implicit Euler discretized dynamics matrix A is formed as follows:\n\nbmA_nm = begincases\nfracC_mDelta t + rho_m + sum_n in N H_nm qquad n = m \n- H_nm qquad n neq m\nendcases quad textwhere  n m in N\n\nwhere A_n,m is the element of the dynamic matrix A on row n and column m, C_m is the thermal mass of node m, Δt is the length of the discretized time step, ρ_m is the self-discharge coefficient of node m, N is the set of nodes included in the lumped-capacitance thermal model, and H_{m,n} is the heat transfer coefficient between nodes n and m.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.form_and_invert_hvac_matrix","page":"Library","title":"ArchetypeBuildingModel.form_and_invert_hvac_matrix","text":"form_and_invert_hvac_matrix(\n    dynamics_matrix::Matrix{Float64},\n    temp_check::BitVector\n)\n\nForms and inverts the matrix for solving HVAC demand in different situations.\n\nEssentially, this function performs the\n\nleft( bmA - sum_m in MbmA_m + bmI_m right)^-1\n\ntransformation of the dynamics matrix A, where the otherwise violated temperature variables m ∈ M are fixed and replaced with a variable for the required heating/cooling demand. See the solve_heating_demand function for the overall formulation.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.initialize_temperatures","page":"Library","title":"ArchetypeBuildingModel.initialize_temperatures","text":"initialize_temperatures(\n    archetype::ArchetypeBuilding,\n    indices::Vector{DateTime},\n    dynamics_matrix::Matrix{Float64},\n    inverted_dynamics_matrix::Matrix{Float64},\n    external_load_vector::Vector{Vector{Float64}},\n    thermal_mass_vector::Vector{Float64},\n    free_dynamics::Bool,\n    initial_temperatures::Union{Nothing,Dict{Object,Float64}},\n)\n\nInitialize the temperature and temperature limit vectors for the heating/cooling demand calculations.\n\nInitial temperatures are solved by repeatedly solving the first 24 hours until the end-result no longer changes. The initialization is abandoned if no stable initial temperatures are found within a thousand 24-hour solves. In this case, the minimum permitted temperatures are used as the initial temperatures for each node, unless otherwise specified via initial_temperatures. Internally, uses the solve_heating_demand_loop function.\n\nSee the solve_heating_demand function for the overall logic and formulation of the heating demand calculations.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.initialize_rhs","page":"Library","title":"ArchetypeBuildingModel.initialize_rhs","text":"initialize_rhs(\n    archetype::ArchetypeBuilding,\n    indices::Vector{Dates.DateTime},\n    delta_t::Int64;\n    realization::Symbol = :realization,\n)\n\nInitialize the right-hand side of the linear equation system, meaning the impact of the external_load_kW and previous temperatures.\n\nThe realization keyword is used to indicate the true data from potentially stochastic input.\n\nSee the solve_heating_demand function for the overall formulation. This function returns the right-hand side components separately\n\nhatPhi = hatPhi + hatfracCDelta t T_t-Delta t\n\nwhere Φ' is the component of external loads, and the rest is the component of the impact of previous temperatures. The components are useful for the solve_heating_demand_loop function.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.load_definitions_template","page":"Library","title":"ArchetypeBuildingModel.load_definitions_template","text":"load_definitions_template()\n\nRead the archetype_definitions.json into Dict`.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_abstract_node","page":"Library","title":"ArchetypeBuildingModel.process_abstract_node","text":"process_abstract_node(\n    building_node_network::BuildingNodeNetwork,\n    node::Object,\n    weather::WeatherData\n)\n\nCalculate the properties of an AbstractNode corresponding to the node in the building_node_network.\n\nCombines all the individual parameters in BuildingNodeDatas in BuildingNodeNetwork into the bare minimum parameters required for modelling lumped-capacitance thermal nodes in our energy system modelling frameworks.\n\nEssentially, this function performs the following steps:\n\nSum all the thermal mass components together and convert into [Wh/K].\nSum all the self-discharge and ambient heat transfer components together.\nCollect heat transfer coefficients between the interior air node and this one.\nUpdate heat transfer coefficients based on user-defined coefficients.\nSum together the internal heat gains, solar gains, radiative sky heat losses, DHW demand, as well as the impact of ambient temperatures.\nReturn the components required for constructing an AbstractNode.\n\nNOTE! The ambient temperatures are accounted for via a combination of self_discharge_coefficient_kW_K and external_load_kW, instead of  heat_transfer_coefficients_kW_K on any ambient temperature nodes, as illustrated by the equations below. Typically, the heat balance equation in simplified lumped-capacitance thermal models is cast as\n\nC_n fracdT_n(t)dt = H_ambn left( T_amb(t) - T_n(t) right) + sum_m in mathbbN left H_nm left( T_m(t) - T_n(t) right) right + Sigma P_n(t) + Sigma Phi_n(t)\n\nwhere C_n is the effective thermal mass of node n, T_{n}(t) is the temperature of node n on time step t, T_{amb}(t) is the ambient temperature, H_{amb,n} is the conductance between ambient temperature and the node temperature, N is the set of temperature nodes connected to node n, H_{n,m} is the conductance between nodes n and m, ∑P_{n}(t) is the total impact of HVAC equipment, and ∑Φ_{n}(t) is the total effect of internal and solar heat gains. However, large-scale energy system models rarely support ambient temperature T_{amb}(t) as input data directly, requiring the above equation to be cast as\n\nC_n fracdT_n(t)dt = - H_ambn T_n(t) + sum_m in N left H_nm left( T_m(t) - T_n(t) right) right + Sigma P_n(t) + left( H_ambn T_amb(t) + Sigma Phi_n(t) right)\n\nNow the - H_{amb,n} T_{n}(t) term can be interpreted as self-discharge losses, while the H_{amb,n} T_{amb}(t) term can be bundled together with other external influences on the node, both supported by typical large-scale energy system models. Unfortunately, this has the side-effect of making the energy-system-model-level input data quite unintuitive, but avoids the need to implement ambient-temperature-dependent interactions in complicated energy system modelling frameworks.\n\nNOTE! All heat transfer coefficients are assumed to be symmetrical! NOTE! All AbstractNodes are given 1e-9 Wh/K thermal mass to avoid singularities when solving the temperature dynamics and heat demand later on.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_abstract_system","page":"Library","title":"ArchetypeBuildingModel.process_abstract_system","text":"process_abstract_system(process::BuildingProcessData; mod::Module = @__MODULE__)\n\nProcess a BuildingProcessData into an AbstractProcess.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, combines the properties of a BuildingProcessData into the bare minimum parameters required to describe a \"process\" in our large-scale energy system modelling frameworks. Performs the following steps:\n\nCOP mode indicated using COP sign, positive for heating and negative for cooling.\nScale COP to account for boundary between buildings and system link nodes. W -> MW conversion and accounting for the total number of processes.\nFactor COP mode into the maximum_flows dictionary.\nReturn the components for AbstractProcess.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_building_envelope","page":"Library","title":"ArchetypeBuildingModel.process_building_envelope","text":"process_building_envelope(archetype::Object, data::ScopeData; mod::Module = @__MODULE__)\n\nCalculate the dimensions of the archetype building envelope based on the assumptions and aggregated building stock data.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, the archetype buildings are assumed to be rectangular in shape, with their external dimensions primarily governed by the number_of_storeys, building_frame_depth_m, and room_height_m parameters. The average_gross_floor_area_m2_per_building is divided into the desired number of floors, and the perimeter walls are calculated by assuming building_frame_depth_m as the length of two parallel walls, and determining the length of the two perpendicular walls based on the floor area. In case of non-integer number_of_storeys, only the topmost floor is assumed to deviate in shape from the rest, and the size of the partial floor is reduced by decreasing the length of the wall that isn't fixed to building_frame_depth_m.\n\nNote that for interior structures like separating floors and partition walls, the surface_area_m2 only includes the surface area of one side of the structure! Accounting for coupling of both surfaces to the interior air is handled through the external_U_value_to_ambient_air_W_m2K and internal_U_value_to_structure_W_m2K parameters.\n\nThe building envelope calculations proceed as follows:\n\nBase floor dimensions using calculate_base_floor_dimensions.\nRoof dimensions using calculate_roof_dimensions.\nSeparating floor dimensions using calculate_separating_floor_dimensions.\nTotal vertical envelope area using calculate_vertical_envelope_surface_area.\nWindow dimensions using calculate_window_dimensions.\nExterior wall dimensions using calculate_exterior_wall_dimensions.\nPartition wall dimensions using calculate_partition_wall_dimensions.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_building_loads","page":"Library","title":"ArchetypeBuildingModel.process_building_loads","text":"process_building_loads(\n    archetype::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    weather::WeatherData;\n    mod::Module = @__MODULE__,\n)\n\nCalculate the domestic hot water demand, internal and solar heat gains for the archetype building.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, performs the following steps:\n\nFinds the building_loads object corresponding to the building_archetype.\nCalculates total domestic hot water (DHW) demand using calculate_total_dhw_demand.\nCalculates total internal heat loads using calculate_total_internal_heat_loads.\nCalculates total solar gains through windows using calculate_total_solar_gains.\nCalculates solar gains through envelope structures using calculate_envelope_solar_gains.\nCalculates envelope radiative sky losses using calculate_envelope_radiative_sky_losses.\nReturns the calculated DHW demand, internal gains, solar gains for windows and the envelope, and envelope radiative sky losses.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_building_node","page":"Library","title":"ArchetypeBuildingModel.process_building_node","text":"process_building_node(\n    node::Object,\n    scope::ScopeData,\n    envelope::EnvelopeData,\n    loads::LoadsData;\n    mod::Module = @__MODULE__,\n)\n\nCalculates the properties of a node using the provided scope, envelope, and loads data.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nAggregates the properties of the allocated structures according to their structure_type_weight parameters. The fenestration and ventilation properties are allocated according to interior_air_and_furniture_weight. Division of internal heat gains and solar heat gains between the interior air and the different structure types is based on the interior_air_and_furniture_weight, the relative surface areas of the different structure types and their structure_type_weights, as well as the internal_heat_gain_convective_fraction parameter for controlling the assumed convective vs radiative fractions of the internal gains. Solar gains through the windows are divided between the interior air and structures similar to internal heat gains, but use the solar_heat_gain_convective_fraction parameter for their convective vs radiative fraction instead. Solar heat gains through the opaque parts of the building envelope are applied entirely to the structures, as are envelope radiative sky heat losses.\n\nEssentially, this function performs the following steps:\n\nFetch user defined thermal mass, self-discharge, temperature set-point, and heat transfer coefficient parameters.\nCalculate the thermal mass on the node using calculate_interior_air_and_furniture_thermal_mass and calculate_structural_thermal_mass.\nCalculate the total heat transfer coefficient between the structures on this node and the interior air using calculate_structural_interior_heat_transfer_coefficient.\nCalculate the total heat transfer coefficient between the structures on this node and the ambient air using calculate_structural_exterior_heat_transfer_coefficient.\nCalculate the total heat transfer coefficient between the structures on this node and the ground using calculate_structural_ground_heat_transfer_coefficient.\nCalculate the total heat transfer coefficient through windows for this node using calculate_window_heat_transfer_coefficient.\nCalculate the total heat transfer coefficient of ventilation and infiltration on this node using calculate_ventilation_and_infiltration_heat_transfer_coefficient.\nCalculate the total heat transfer coefficient of thermal bridges for this node using calculate_total_thermal_bridge_heat_transfer_coefficient.\nFetch domestic hot water demand from loads for this node.\nCalculate the convective internal heat gains on this node using calculate_convective_internal_heat_gains.\nCalculate the radiative internal heat gains on this node using calculate_radiative_internal_heat_gains.\nCalculate the convective solar heat gains through windows on this node using calculate_convective_solar_gains.\nCalculate the radiative solar heat gains through windows on this node using calculate_radiative_solar_gains.\nCalculate the total solar heat gains through the opaque building envelope on this node using calculate_total_envelope_solar_gains.\nCalculate the total radiative envelope sky heat losses on this node using calculate_total_envelope_radiative_sky_losses.\nReturn all the pieces necessary for constructing the BuildingNodeData for this node.\n\nNOTE! Linear thermal bridges are assumed to bypass any potential structural lumped-capacitance nodes, and apply directly to the heat transfer coefficient between the interior air and the ambient air! NOTE! Currently, radiative internal and solar gains are lost through the windows in the building envelope.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_building_stock_scope","page":"Library","title":"ArchetypeBuildingModel.process_building_stock_scope","text":"process_building_stock_scope(scope::Object; mod::Module = @__MODULE__)\n\nProcess the aggregated building_stock_statistic properties of a scope.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nReturns the gross-floor area weighted total number_of_buildings and average_gross_floor_area_m2_per_building defined by the building_scope and its associated relationships. Furthermore, returns the gross-floor area weights for the building_type__building_period__location_id useful for weighting the structural and fenestration/ventilation data.\n\nEssentially, performs the following steps:\n\nFilter out irrelevant building stock statistics and check there are any left.\nCalculate the gross-floor area weights using calculate_gross_floor_area_weights.\nAggregate the gross-floor area weights using aggregate_gfa_weights.\nReturn the necessary pieces to construct a ScopeData.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_building_system","page":"Library","title":"ArchetypeBuildingModel.process_building_system","text":"process_building_system(\n    archetype::Object,\n    process::Object,\n    scope::ScopeData,\n    weather::WeatherData;\n    mod::Module = @__MODULE__,\n)\n\nCalculates the properties required for creating a BuildingProcessData.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially performs the following steps:\n\nFetch the number_of_processes, system_link_nodes, and COP_mode from the definitions.\nCalculate the coefficient of performance using the calculate_cop function.\nFetch the defined maximum power flows.\nReturn the components for BuildingProcessData.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_structure_scope","page":"Library","title":"ArchetypeBuildingModel.process_structure_scope","text":"process_structure_scope(\n    aggregated_gfa_weights::Dict{NTuple{3,Object},Float64};\n    mod::Module = @__MODULE__,\n)\n\nAggregate structure_statistics using gross-floor area weights.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, this function calculates the aggregate properties of structures based on the aggregated gross floor area weights produced by the aggregate_gfa_weights function. Returns the gross-floor area weighted average structural properties as StructureData for different structure_types. These include the design U-values [W/m2K], effective thermal mass [J/m2K], linear thermal bridges [W/mK], and and U-values for heat transfer between the building interior and the structure, the structure and ambient air, the structure and ground, as well as the total U-value through the structure.\n\np_textavg = sum_textbtbplid w_textbtbplid p_textbtbplid\n\nwhere p is any of the above listed properties to be aggregated.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_ventilation_and_fenestration_scope","page":"Library","title":"ArchetypeBuildingModel.process_ventilation_and_fenestration_scope","text":"process_ventilation_and_fenestration_scope(\n    aggregated_gfa_weights::Dict{NTuple{3,Object},Float64};\n    mod::Module = @__MODULE__,\n)\n\nAggregate ventilation_and_fenestration_statistics using gross-floor area weights.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nEssentially, this function calculates the aggregate properties of ventilation and fenestration based on the aggregated gross-floor area weights produced by the aggregate_gfa_weights function. Returns the gross-floor area weighted average HRU-efficiency, infiltration rate [1/h], ventilation rate [1/h], window U-values [W/m2K], and window total normal solar energy transmittance.\n\np_textavg = sum_textbtbplid w_textbtbplid p_textbtbplid\n\nwhere p is any of the above listed properties to be aggregated. \n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.process_weather","page":"Library","title":"ArchetypeBuildingModel.process_weather","text":"process_weather(\n    weather::Object;\n    mod::Module = @__MODULE__,\n    realization::Symbol = realization,\n)\n\nProcess weather data for the WeatherData constructor.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default. The realization scenario is required for processing of effective ground temperature.\n\nEssentially, performs the following steps:\n\nFetch the ambient temperature data for weather.\nCalculate the effective ground temperature using calculate_effective_ground_temperature.\nFetch diffuse and direct solar irradiation data.\nReturn the components for the WeatherData constructor.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.solve_consumption","page":"Library","title":"ArchetypeBuildingModel.solve_consumption","text":"solve_consumption(\n    archetype::ArchetypeBuilding,\n    hvac_demand::Dict{Object,T} where {T<:SpineDataType};\n    mod::Module = @__MODULE__,\n)\n\nSolve the consumption of abstract_process included in the archetype, based on the hvac_demand.\n\nNOTE! The mod keyword changes from which Module data is accessed from, @__MODULE__ by default.\n\nCurrently produces only extremely simple estimates, where each abstract_process is assumed to handle the demand on their output nodes in full, regardless of what the other abstract_processes are doing. Thus, the results cannot be used as is for systems with complimentary HVAC processess, and the merit-order assumptions are left up to the user.\n\nHeating and cooling are handled separately, though.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.solve_heating_demand","page":"Library","title":"ArchetypeBuildingModel.solve_heating_demand","text":"solve_heating_demand(\n    archetype::ArchetypeBuilding,\n    free_dynamics::Bool,\n    initial_temperatures::Union{Nothing,Dict{Object,Float64}};\n    realization::Symbol = :realization,\n)\n\nSolve the heating/cooling demand of the archetype.\n\nNote that this function calculates the \"final energy demand\" of the archetype building, and not the energy consumption of it's HVAC systems. Furthermore, the calculations are deterministic, with realization defining the true data from potentially stochastic input. See the solve_consumption function for that. Essentially, performs the following steps:\n\nCheck external load data and determine_temporal_structure.\nform_and_invert_dynamics_matrix for the free temperature dynamics.\nInitialize external load an thermal mass vectors using initialize_rhs.\nInitialize temperature and temperature limit vectors using initialize_temperatures.\nSolve the heating demand using solve_heating_demand_loop.\nRearrange the solution into Dicts and return them.\n\nUses an extremely simple rule-based control to solve the heating/cooling demand of the archetype building. The controller intervenes whenever node temperatures would deviate from permitted limits, and provides the required energy input to maintain the system at the limit.\n\nThe building dynamics are discretized using implicit (backwards) Euler, mainly for consistency with our existing energy system modelling tools like Backbone or SpineOpt. In principle, I believe the system could be solved analytically similar to my Master's Thesis, if better accuracy would be desired: Energy Management in Households with Coupled Photovoltaics and Electric Vehicles, Topi Rasku, 2015, Aalto University School of Science.\n\nThe idea of solving heating demand calculations can be as follows, starting from the energy balance equation for node n\n\nC_n fracdT_n(t)dt = - rho_n T_n(t) + sum_m in N left H_nm left( T_m(t) - T_n(t) right) right + Phi_n(t)\n\nwhere C_n is the heat capacity of node n, T_n(t) is the time-dependent temperature of node n at time t, ρ_n is the self-discharge from node n, N is the set of temperature nodes in the lumped-capacitance model of the building, H_n,m is the heat transfer coefficient between nodes n and m, and Φ_n(t) is the time-dependent total external heat load on node n. Using the implicit Euler discretization, the above can be cast into\n\nleft( fracC_nDelta t + rho_n + sum_m in N H_nm right) T_nt - sum_m in N left H_nm T_mt right = Phi_nt + fracC_nDelta t T_nt-Delta t\n\nwhere Δt is the length of the discretized time step. Since we always know the temperatures on the previous time step t-Δt, the above can be expressed in matrix form and solved as\n\nbmA hatT = hatPhi \nhatT = bmA^-1 hatPhi\n\nwhere A is the so-called dynamics matrix,  T is the current temperature vector, and Φ is the right-hand side vector, containing the effect of external loads and previous temperatures.\n\nThe above is used to calculate the temperatures of the nodes on each subsequent time step. However, when any of the node temperatures would violate the defined minimum and maximum permitted temperatures, that temperature variable is instead fixed to the violated boundary, moved to the right-hand side, and replaced with a heating/cooling demand variable ϕ_m instead. This results in a slightly modified problem to be solved\n\nhatphi = left( bmA - sum_m in MbmA_m + bmI_m right)^-1 left( hatPhi - sum_m in MhatA_m T_m right)\n\nwhere ϕ is the modified temperature vector with the fixed temperature replaced with the heating/cooling demand variable, m ∈ M are the nodes that would violate their permitted bounds, and are therefore fixed at the boundary T'_m, A_m represents a selection of column m from the matrix A, and I_m represents column m from an identity matrix. Please note that there are both matrix and vector selections of A_m, where the matrix selection preserves the dimensions with filling zeroes, while the vector selection is essentially only the selected column in vector form.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.solve_heating_demand_loop","page":"Library","title":"ArchetypeBuildingModel.solve_heating_demand_loop","text":"solve_heating_demand_loop(\n    indices::Vector{DateTime},\n    dynamics_matrix::Matrix{Float64},\n    inverted_dynamics_matrix::Matrix{Float64},\n    temperatures::Vector{Vector{Float64}},\n    min_temperatures::Vector{Float64},\n    max_temperatures::Vector{Float64},\n    external_load_vector::Vector{Vector{Float64}},\n    thermal_mass_vector::Vector{Float64},\n    free_dynamics::Bool,\n    initial_temperatures::Vector{Float64}\n)\n\nSolve the heating/cooling demand one timestep at a time over the given indices.\n\nEssentially, performs the following steps:\n\nInitialize the temperature vector, HVAC demand vector, and a dictionary for the dynamic matrices for solving the problem.\nLoop over the given indices and do the following:\nSolve new temperatures if HVAC not in use.\nCheck if new temperatures would violate temperature limits.\nIf necessary, solve the HVAC demand required to keep temperatures within set limits.\nReturn the solved temperatures and HVAC demand for each node and index.\n\nSee the solve_heating_demand function for the overall formulation.\n\n\n\n\n\n","category":"function"},{"location":"library/#ArchetypeBuildingModel.timeseries_to_backbone_map","page":"Library","title":"ArchetypeBuildingModel.timeseries_to_backbone_map","text":"timeseries_to_backbone_map(ts::TimeSeries)\n\nConvert TimeSeries into Backbone input data Map corresponding to time-varying data.\n\n\n\n\n\ntimeseries_to_backbone_map(x::Real)\n\nConvert Real into Backbone input data Map.\n\n\n\n\n\n","category":"function"},{"location":"model_workflow/#Overview-of-the-workflow","page":"Overview of the workflow","title":"Overview of the workflow","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The following sections aim to go over the main program file process_archetype_buildings.jl and explain the high-level workflow of the ArchetypeBuildingModel.jl. Links are provided to the detailed explanations of the different data structures and functions in the Library section for readers interested in the technical details.","category":"page"},{"location":"model_workflow/#Command-line-arguments","page":"Overview of the workflow","title":"Command line arguments","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The process_archetype_buildings.jl main program file has been primarily designed to be run via Spine Toolbox, but be run directly from the command line as well if necessary. Regardless, the main program is controlled using the following command line arguments:","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The url to a Spine Datastore containing the required input data and archetype building definitions.","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"Furthermore, the following optional keyword arguments can be provided:","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"-spineopt <>, the url to a Spine Datastore where the produced SpineOpt input data should be written, if any.\n-backbone <>, the url to a Spine Datastore where the produced Backbone input data should be written, if any.\n-generic <>, the url to a Spine Datastore where the produced Generic input data should be written. This is essentially a dump of the raw ArchetypeBuildingModel.jl data structures, primarily useful for debugging purposes.\nresults <url>, url to a Spine Datastore where the produced baseline HVAC demand results should be written. By default, the results are written back into the input datastore at url.\n-weather <url>, the url to a Spine Datastore into which the autogenerated weather data is imported. If not provided, weather data is written back into the input data url.\n-save_layouts <false>, controls whether auto-generated building_weather layouts are saved as images. Set to false by default, as this keyword exists primarily for debugging purposes, allowing visual inspection of the weather data weighting rasters.\nalternative <\"\">, the name of the Spine Datastore alternative where the -spineopt, -backbone, or -generic input data are saved. An empty string by default, resulting in Spine Toolbox automatically generating an alternative name when importing the parameter values.\nrealization <realization>, The name of the stochastic scenario containing true data over forecasts. Only relevant if stochastic weather and/or load data is used.","category":"page"},{"location":"model_workflow/#Input-database-tests","page":"Overview of the workflow","title":"Input database tests","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"Next, the main program opens the input Datastore, and performs a series of tests on the input data and archetype building definitions to check that they make sense. If not, the main program will halt and display the test results and error messages for the user, in order to help them deduce what is wrong with the input data or definitions.","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The input Datastore tests are handled by the run_object_class_tests, run_parameter_tests, and run_structure_type_tests functions.","category":"page"},{"location":"model_workflow/#Process-ScopeData-structs","page":"Overview of the workflow","title":"Process ScopeData structs","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"As explained by The building_scope definition section, the building_scope defines the geographical and statistical scope for a building_archetype. Before we can begin creating lumped-capacitance thermal models for the archetype buildings, the main program first needs to know the aggregated average basic properties of the archetype. Thus, the next step is to process and create the ScopeData structs for all the building_scopes attached to a building_archetype via a building_archetype__building_scope relationship (scopes not attached to any archetype are not processed to save time).","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The final ScopeData structs are stored into a scope_data_dictionary, which can be examined through the Julia REPL after the main program has finished. Alternatively, the -generic keyword can be used to export the raw data structures to a Spine Datastore for inspection.","category":"page"},{"location":"model_workflow/#Process-WeatherData-structs","page":"Overview of the workflow","title":"Process WeatherData structs","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"After the main program is done with Process ScopeData structs, the next step is to process the building_weather definitions into WeatherData before forming the archetype building lumped-capacitance thermal models. However, since The building_weather definition isn't mandatory, the main program first checks which building_archetype definitions lack a building_archetype__building_weather definition, and tries to fetch it automatically using the ArchetypeBuildingWeather.py sub-module. Essentially, the automatic weather generation is handled via the create_building_weather function based on The building_archetype definition and the processed ScopeData.","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The main program will import the automatically generated building_weather  objects into the Spine Datastore at -weather <url>, as well as link it to the appropriate building_archetype via the building_archetype__building_weather relationship. Regardless, the final WeatherData structs are stored into a weather_data_dictionary, which can be examined through the Julia REPL after the main program has finished. Alternatively, the -generic keyword can be used to export the raw data structures to a Spine Datastore for inspection.","category":"page"},{"location":"model_workflow/#Process-ArchetypeBuilding-structs","page":"Overview of the workflow","title":"Process ArchetypeBuilding structs","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"With all the pieces now in place, the main program can finally process all the data into lumped-capacitance thermal models depicting the desired synthetic average archetype buildings. This is handled by the ArchetypeBuilding struct constructor, and takes as input The building_archetype definition, as well as the appropriate ScopeData and WeatherData processed during the previous steps.","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The ArchetypeBuilding contains all the information about the final lumped-capacitance thermal model of the synthetic average archetype building, as well as the definitions used in its construction. The final ArchetypeBuilding structs are stored into an archetype_dictionary, which can be examined through the Julia REPL after the main program has finished. Alternatively, the -generic keyword can be used to export the raw data structures to a Spine Datastore for inspection.","category":"page"},{"location":"model_workflow/#Solve-the-HVAC-demand","page":"Overview of the workflow","title":"Solve the HVAC demand","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"After processing the ArchetypeBuildings, the main program will calculate a baseline/reference heating/cooling demand using the lumped-capacitance thermal models of the synthetic average archetype buildings. This is handled by the ArchetypeBuildingResults struct and its constructor.","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The final ArchetypeBuildingResults are written back into the input Datastore, as well as stored into an archetype_results_dictionary, which can be examined through the Julia REPL after the main program has finished. Alternatively, the -generic keyword can be used to export the raw data structures to a Spine Datastore for inspection.","category":"page"},{"location":"model_workflow/#Export-SpineOpt-input-data","page":"Overview of the workflow","title":"Export SpineOpt input data","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"If the -spineopt <url> argument is given, the main program will attempt to convert the ArchetypeBuildings in the archetype_dictionary into SpineOpt energy system model input data, and export that input data into the Spine Datastore at the given url.","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The input data creation is handled by the SpineOptInput struct and its constructor.","category":"page"},{"location":"model_workflow/#Export-Backbone-input-data","page":"Overview of the workflow","title":"Export Backbone input data","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"If the -backbone <url> argument is given, the main program will attempt to convert the ArchetypeBuildings in the archetype_dictionary into Backbone energy system model input data, and export that input data into the Spine Datastore at the given url.","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The input data creation is handled by the BackboneInput struct and its constructor.","category":"page"},{"location":"model_workflow/#Export-Generic-input-data","page":"Overview of the workflow","title":"Export Generic input data","text":"","category":"section"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"If the -generic <url> argument is given, the main program will attempt to save the processed ArchetypeBuildingResults in the archetype_results_dictionary in their entirety into the Spine Datastore at the given url. Essentially, this means saving all of the following:","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"building_weather definitions, with the addition of the effective ground temperature from ArchetypeBuildingModel.calculate_effective_ground_temperature.\nbuilding_scope definitions with their associated ScopeData.\nbuilding_archetype definitions, with their associated EnvelopeData, BuildingNodeData,  BuildingProcessData, LoadsData, AbstractNode, and AbstractProcess.","category":"page"},{"location":"model_workflow/","page":"Overview of the workflow","title":"Overview of the workflow","text":"The name \"Generic\" is perhaps a bit misleading, and should probably be renamed to e.g. \"Raw\" at some future point in time?","category":"page"},{"location":"archetypebuildingweather/#ArchetypeBuildingWeather.py","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"","category":"section"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"A PyPSA/atlite-based Python sub-module for processing weather data.","category":"page"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"The aim of this sub-module is to automatically aggregate ERA5 weather data for large geographical areas described using a shapefile, a set of weights connected to the shapefile, and an optional raster data file also used for weighting. Since the Julia documenter doesn't know how to automatically handle Python docstrings, interested readers unfortunately need to look into the code itself for the technical details. However, the following sections hope to at least give you a rough idea about what the ArchetypeBuildingWeather.py sub-module does. Furthermore, the testscript.ipynb Jupyter Notebook included in this repository provides and example how the weather data aggregation works.","category":"page"},{"location":"archetypebuildingweather/#Input-data-requirements-for-the-automatic-weather-data-aggregation","page":"ArchetypeBuildingWeather.py","title":"Input data requirements for the automatic weather data aggregation","text":"","category":"section"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"The weather data aggregation is controlled by a few parameters in the  Input data reference:","category":"page"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"shapefile_path: Filepath pointing to a shapefile describing the geographical shape of the building_stock in question.\nweather_start: The desired start of the weather period for the building_archetype.\nweather_end: The desired end of the weather period for the building_archetype.\nraster_weight_path: An optional filepath to weighting raster data. (See e.g. Hotmaps residential heated gross floor area density data)","category":"page"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"While the weather_start and weather_end are more or less self-explanatory, there are a few important things to know about the shapefile and optional raster data:","category":"page"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"The shapefile and raster must use the WGS 84 EPSG:4326 coordinate reference system, as it is required by PyPSA/atlite for correctly handling ERA5 data.\nThe shapefile must contain an attribute called location, with values corresponding to the location_id objects (not the location_name parameters!) for the included polygons. E.g. for my Finnish building stock data, I have a FI.shp containing a polygon for each municipality in Finland, with the location attribute containing the Finnish municipality code for each polygon.\nThe absolute values of the optional raster data don't matter, as the data is normalized during the processing.","category":"page"},{"location":"archetypebuildingweather/#High-level-description-of-the-weather-data-aggregation,-the-aggregate_weather-function","page":"ArchetypeBuildingWeather.py","title":"High-level description of the weather data aggregation, the aggregate_weather function","text":"","category":"section"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"As explained by the Process WeatherData structs section, if The building_archetype definition doesn't include a user-specified building_weather definition, the create_building_weather function is called to attempt to automatically fetch and aggregate the desired weather data based on The building_scope definition. Under the hood, the create_building_weather calls the aggregate_weather Python function, which could be called the main function of the ArchetypeBuildingWeather.py sub-module. The aggregate_weather function essentially performs the following steps:","category":"page"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"Load the shapefile from shapefile_path.\nPrepare the cutout for atlite using The prepare_cutout function.\nPrepare the layout for atlite using The prepare_layout function.\nIf save_layouts == true, plot diagnostics using The plot_layout function.\nReturn the output of The process_weather function.","category":"page"},{"location":"archetypebuildingweather/#The-prepare_cutout-function","page":"ArchetypeBuildingWeather.py","title":"The prepare_cutout function","text":"","category":"section"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"The prepare_cutout function takes as input the given shapefile, weather_start and weather_end, and quite simply creates and prepares the atlite ERA5 cutout. See the atlite documentation or their Creating a Cutout with ERA5 example for more information.","category":"page"},{"location":"archetypebuildingweather/#The-prepare_layout-function","page":"ArchetypeBuildingWeather.py","title":"The prepare_layout function","text":"","category":"section"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"The prepare_layout function takes the given shapefile, the optional raster_path, as well as the location_id_gfa_weights produced by the ArchetypeBuildingModel.process_building_stock_scope function, and produces a layout raster for sampling the ERA5 weather data. Again, see the atlite documentation for more information. The layout produced here is essentially identical to the capacity layouts described in the documentation, except that ours is normalized so that it results into a weighted average value, instead of a cumulative value.","category":"page"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"note: Note\nThe location_id_gfa_weights have precedence over the optional raster_path weights. When both are used, the raster weights are normalized to match the corresponding location_id_gfa_weights, which are based on the shapefile vector GIS data. Thus, the raster_path is essentially only used to refine the distribution inside the location_id polygons of the shapefile.","category":"page"},{"location":"archetypebuildingweather/#The-plot_layout-function","page":"ArchetypeBuildingWeather.py","title":"The plot_layout function","text":"","category":"section"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"If the save_layouts == true (false by default) is set, the plot_layout function is called to plot both the original raster weights, as well as the layout from the The prepare_layout function. The diagnostic figures are saved under the figs/ folder in the repository. Here are example weather data aggregation layouts for Germany as plotted by the plot_layout function, before and after matching the used polulation density raster resolution to ERA5.","category":"page"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"(Image: DE_raster) (Image: DE_layout)","category":"page"},{"location":"archetypebuildingweather/#The-process_weather-function","page":"ArchetypeBuildingWeather.py","title":"The process_weather function","text":"","category":"section"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"After both the cutout and the layout have been processed, the process_weather function is called to calculate the aggregated weather parameters required for the ArchetypeBuildingModel.jl. Essentially, this means calculating the following:","category":"page"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"Ambient temperature in [K].\nDiffuse irradiation on a horizontal surface in [W/m2].\nDirect irradiation on a horizontal surface, as well as vertical surfaces facing in the cardinal directions in [W/m2].","category":"page"},{"location":"archetypebuildingweather/","page":"ArchetypeBuildingWeather.py","title":"ArchetypeBuildingWeather.py","text":"So ultimately, out of all this weather data processing, we're left with only seven timeseries representing the weighted average weather over the building_scope.","category":"page"},{"location":"#ArchetypeBuildingModel.jl","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"","category":"section"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"A SpineInterface.jl-based Julia module for aggregating building stock data into desired archetype building lumped-capacitance thermal models.","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"The goal of this module is to provide an easy way to define and aggregate building stock statistical data into arbitrary sets of synthetic average archetype building lumped-capacitance thermal models, depicting the flexible heating/cooling demand of a building stock. These lumped-capacitance thermal models are created primarily for seamless integration into large-scale energy system models like Backbone or SpineOpt, in order to depict flexible heating/cooling demand of significant portions of the building stock.","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"Essentially, this module takes input data and archetype building definitions in the format detailed in the Input data reference section as input, processes them according to the workflow detailed in the Overview of the workflow section, and produces lumped-capacitance thermal models of the desired synthetic average archetype buildings depicting the heating/cooling demand and HVAC energy consumption of a building stock, explained in the Archetype building modelling section. While weather data can be provided by the user if desired, the ArchetypeBuildingWeather.py python sub-module provides automatic fetching and processing of the necessary weather data based on the provided archetype building definitions. Solving the baseline heating demand and HVAC equipment consumption is also calculated using very simple rule-based control keeping the node temperatures within permitted limits.","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"The key outputs from this module, however, are the readily made Backbone or SpineOpt input datasets that can be plugged into their respective energy system models for depicting the flexible heating/cooling demand of the depicted building stock. See the figure below for a high-level illustration of the workflow.","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"This documentation is organized as follows: The Defining archetype buildings section explains how the archetype buildings are defined, meaning the key components in the Input data reference, and how to use them. The Overview of the workflow section goes through the process_archetype_buildings.jl main program file, explaining what is actually being done when aggregating the building stock data into the desired synthetic average archetype buildings. The Archetype building modelling section explains the lumped-capacitance thermal modelling approach used by this module in more detail, while the ArchetypeBuildingWeather.py section briefly explains the logic and workings of the python sub-module handling the automatic weather data processing. The Input data processing for large-scale energy system modelling frameworks section provides an overview of how the data is further processed to be compatible with Backbone and SpineOpt. Finally, the Input data reference and the Library sections provide comprehensive documentation of the definition/input data format and the modelling code respectively.","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"(Image: ABMWorkflow)","category":"page"},{"location":"#Key-limitations","page":"ArchetypeBuildingModel.jl","title":"Key limitations","text":"","category":"section"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"Due to the used simplified modelling approach, there are several key limitations for the model that users should be aware of:","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"ArchetypeBuildingModel.jl primarily aims to depict the flexibility in building stock heating/cooling demand, and NOT the demand itself. While the model produces baseline heating and cooling demand timeseries, it is important to understand that these timeseries are oversimplified compared to the actual demand. Due to the limited number of archetype buildings and the used single-zone approach, there can be relatively long periods where, on average, the model requires no heating and cooling at all. In reality, it is all but guaranteed that there will always be some buildings (or zones therein) requiring at least some cooling and/or heating at any given time.\nHeating and cooling set points can currently only be provided as constants, which can have a major impact on the modelled heating/cooling flexibility. In some places, it is common to significantly reduce heating when buildings are unoccupied in order to save energy. While such boundaries would pose no problems for the intended use in large-scale energy system optimisation models, the simple rule-based controller currently used for calculating the baseline heating/cooling demand cannot handle changing set points.\nSeveral real-life phenomena affecting the heating/cooling demand are neglected for simplicity:\nTemperature-dependent bypass of ventilation heat recovery units (HRUs). In reality, HRUs can be bypassed in summer to reduce cooling loads, but implementing these types of controls compatible with mixed-integer linear programming frameworks is not straightforward. Likely results in overestimated cooling flexibility.\nPotential opening of doors/windows for additional ventilation or cooling by the inhabitants, likely resulting in overestimated cooling demand flexibility.\nPotential use of active solar shading elements in buildings, e.g. blinds, for reducing solar heat gains in summer to reduce cooling loads. Likely results in overestimated cooling demand.\nPotential change in inhabitant behaviour to increase/reduce internal heat gains depending on indoor air temperature.","category":"page"},{"location":"#Known-bugs","page":"ArchetypeBuildingModel.jl","title":"Known bugs","text":"","category":"section"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"ArchetypeBuildingWeather.py currently miscalculates the solar irradiation on the vertical surfaces. This is due to the diffuse irradiation being calculated only for a horizontal surface, which is larger than what the diffuse irradiation is for a vertical surface. However, ground-reflected irradiation is also currently neglected, which compensates for the overestimated diffuse irradiation on vertical surfaces to some degree. Regardless, the solar irradiation on vertical surfaces isn't calculated correctly.\nFixing this wouldn't be terribly difficult, but would require turning the diffused irradiation into a Map similar to the direct irradiation quantities and duplicate the data for all cardinal directions.\nI haven't bothered with this so far because ArBuMo.jl fixes this due to overall better weather data processing (which is incidentally how I realized this bug). ","category":"page"},{"location":"#Related-works","page":"ArchetypeBuildingModel.jl","title":"Related works","text":"","category":"section"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"For an up-to-date list of works using ArchetypeBuildingModel.jl, please refer to the VTT Research Information System entry on ArchetypeBuildingModel.jl. Regardless, here are a couple of author-curated highlights:","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"Sensitivity analysis and comparison against dedicated white-box building simulation software (Preprint)\nBuilding-level optimal energy management (Preprint)\nStochastic district-level energy management (Accepted and presented at the BS2023 conference, yet to be published)\nDemo for generating EU-level flexible building stock heating/cooling models for SpineOpt\nAnalysing the impacts of flexible residential electric heating for Finland (MSc thesis)","category":"page"},{"location":"#Future-work?","page":"ArchetypeBuildingModel.jl","title":"Future work?","text":"","category":"section"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"Overall, I'm beginning to feel that ArchetypeBuildingModel.jl is too complicated to be truly useful, and different simplifications are required. Instead, it might be worthwhile to try an approach where the heating and cooling demand are separated from the depiction of the flexibility, as this would offer two key advantages:","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"Modularity: If the calculation of the heating/cooling demand of the modelled building stock could be separated from how the flexibility is depicted, it would allow easy swapping between different models for calculating the heating/cooling demand.\nAccuracy? If the heating/cooling demand is separated from the flexibility, it should allow more accurate depictions of aggregated heating/cooling demand, mitigating point 1 in Key limitations.","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"Essentially, the flexibility in heating/cooling demand could maybe be represented as a storage of the deviation from the baseline heating/cooling demand. At least two storage nodes would probably still be necessary to accurately capture short-term flexibility due to the faster response of indoor air temperatures to any changes in heating/cooling power, acting as a buffer between energy in and the heating/cooling demand. However, there are some foreseeable challenges with such an approach:","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"Accuracy? Even if the heating/cooling demand could be depicted more accurately, it is possible that depicting flexibility becomes more challenging requiring simplifications affecting the modelled accuracy. Can time-varying ambient or indoor conditions be properly accounted for?\nHeating vs cooling demand? Can heating and cooling demand be properly captured if the flexibility if modelled as a storage for temperature deviation?","category":"page"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"So who knows if such an approach would be any more worthwhile?","category":"page"},{"location":"#Contents","page":"ArchetypeBuildingModel.jl","title":"Contents","text":"","category":"section"},{"location":"","page":"ArchetypeBuildingModel.jl","title":"ArchetypeBuildingModel.jl","text":"","category":"page"},{"location":"archetype_modelling/#Archetype-building-modelling","page":"Archetype building modelling","title":"Archetype building modelling","text":"","category":"section"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"This section aims to explain the lumped-capacitance (resistance-capacitance) modelling approach and the inherent assumptions used by this module in more detail, aimed at a more expert audience interested in the inner workings of the module. However, a lot of the techical details are not reproduced here, but instead refer to the relevant docstrings in the Library section. In general, the used method is loosely based on the international standard EN ISO 52016-1:2017, and majority of the same assumptions apply.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Overall, the structure of this section more or less follows the ArchetypeBuilding constructor, as it is the key struct containing and calculating all the information  necessary for modelling an archetype building. The Process ScopeData structs, Process WeatherData structs, and ArchetypeBuildingWeather.py sections already sufficiently explain the handling of the building stock statistics and weather data as input, so we'll start with Forming the building envelope instead. Next, we proceed to Preparing the building loads, namely the internal heat gains and solar heat gains for the archetype building. Then, now that we know the dimensions of the building envelope and the external loads on the building, we can proceed with Calculating the properties of the lumped-capacitance thermal nodes, as well as with Calculating the properties of the HVAC equipment. Finally, ArchetypeBuildingModel.jl also includes a very simple rule-based method for Solving the baseline heating demand and HVAC equipment consumption. While the main goal of this module is to provide input data for optimization models like Backbone or SpineOpt, having access to simple standalone baseline solutions is a quite helpful.","category":"page"},{"location":"archetype_modelling/#Forming-the-building-envelope","page":"Archetype building modelling","title":"Forming the building envelope","text":"","category":"section"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"The first step in creating an archetype building is forming the building envelope by calculating the dimensions of the different structures, and storing the results in a corresponding EnvelopeData struct. However, as ArchetypeBuildingModel.jl aims to remain useable on the building stock scale, the geometry of the archetype buildings is heavily simplified. The key assumptions for forming the archetype building envelope are as follows:","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"The archetype buildings are assumed to be rectangular in shape, with an average_gross_floor_area_m2_per_building based on the appropriate ScopeData. The shape of the envelope is assumed to be primarily determined by the following building_archetype parameters:\nnumber_of_storeys: The assumed average number of storeys of the archetype building. In case of non-integer values, only the topmost separating floor is assumed to differ from the rest. Essentially, the average_gross_floor_area_m2_per_building is divided into this many floors.\nbuilding_frame_depth_m: The assumed average depth of the archetype building. Since dwellings typically have requirements for natural light (at least in Finland), there's a limit for how deep the building frame can reasonably be when fenestrated from both sides. Naturally, this varies from building to building depending on their age and exact shape, but in general, I find it more reliable than using e.g. some assumption about the width-to-depth ratio of the buildings.\nroom_height_m: The assumed average height of the rooms. In combination with the number_of_storeys, this parameter determines how tall the archetype buildings are. For simplicity, all storeys are assumed to be equally high, and non-integer number_of_storeys are rounded up for estimating the height of the building.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"(Image: Geometryfig)","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Fenestration and partition walls are controlled using the following parameters:\npartition_wall_length_ratio_to_external_walls_m_m controls the amount of partition walls relative to external walls.\nwindow_area_distribution_towards_cardinal_directions controls the facing of windows (North, East, South, West, Horizontal).\nwindow_area_to_external_wall_ratio_m2_m2 controls the share of windows relative to vertical facade area.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"See the ArchetypeBuildingModel.process_building_envelope docstring for a detailed explanation of how the envelope shape related parameters affect the calculations. The actual equations for the surface areas and linear thermal bridge lengths of the structures can be found from the docstrings of the dedicated functions linked therein.","category":"page"},{"location":"archetype_modelling/#Preparing-the-building-loads","page":"Archetype building modelling","title":"Preparing the building loads","text":"","category":"section"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"The next step we need to do before we can really start forming the lumped-capacitance thermal nodes is to determine the total external heat loads for the archetype building. Essentially, this means forming the LoadsData struct, containing the total domestic hot water demand, internal heat gains, as well as solar heat gains for the building.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"The total building loads for the LoadsData are calculated by the ArchetypeBuildingModel.process_building_loads function, based on the input data provided via the connected building_loads object. The calculations for the total domestic hot water demand and internal gains are extremely simple, and essentially only boil down to adding together the prodived base and gfa_scaling input data. See the ArchetypeBuildingModel.calculate_total_dhw_demand and ArchetypeBuildingModel.calculate_total_internal_heat_loads for the exact formulations.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Calculating the total solar gains for the buildings is more complicated, but it is still heavily simplified by the following key assumptions in line with the  EN ISO 52016-1:2017 standard:","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Solar properties of windows as well as external shading are assumed to be independent of the solar angle.\nSurface heat transfer coefficients and apparent sky to ambient air temperature difference are approximated as time-invariant averages.\nExterior surface of envelope structures is assumed to have negligible thermal mass for simplicity.\nFor the purpose of solar heat gains, the building is assumed to aligned with the cardinal directions.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Solar gains through the windows are impacted by the window properties in ScopeData, the solar irradiation in WeatherData, the assumed window_non_perpendicularity_correction_factor, as well as the estimated external_shading_coefficient and window_area_distribution_towards_cardinal_directions. See the ArchetypeBuildingModel.calculate_total_solar_gains for the exact formulation.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Meanwhile, the solar gains through the building envelope are impacted by the exterior_resistance_m2K_W and external_U_value_to_ambient_air_W_m2K of each structure, their surface areas as recored in EnvelopeData, The assumed average_structural_solar_absorption_coefficient, the solar irradiation in WeatherData, as well as the estimated external_shading_coefficient. The radiative envelope sky heat losses are also heavily simplified, depending again on the surface properties of the structures, as well as assumed sky view factors, the assumed external_radiative_surface_heat_transfer_coefficient_W_m2K, and the assumed average_apparent_sky_temperature_difference_K. See the ArchetypeBuildingModel.calculate_total_envelope_solar_gains and ArchetypeBuildingModel.calculate_total_envelope_radiative_sky_losses, as well as the functions linked therein for the exact formulation.","category":"page"},{"location":"archetype_modelling/#Calculating-the-properties-of-the-lumped-capacitance-thermal-nodes","page":"Archetype building modelling","title":"Calculating the properties of the lumped-capacitance thermal nodes","text":"","category":"section"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Now that we have the processed EnvelopeData and LoadsData, we can finally start calculating the properties of the lumped-capacitance thermal nodes in earnest. First, the create_building_node_network function is called to form the ArchetypeBuildingModel.BuildingNodeNetwork, which is essentially a dictionary containing the processed BuildingNodeData of all the relevant thermal nodes. However, it's actually the BuildingNodeData and the ArchetypeBuildingModel.process_building_node that are of primary interest, as they contain and calculate the properties of the thermal nodes.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Because the BuildingNodeData has quite a few fields and the ArchetypeBuildingModel.process_building_node has quite a few steps, we won't be going through them thoroughly here. Instead, we'll focus on the idea behind the thermal node processing, hopefully giving you an understanding as to why and how the thermal nodes are processed the way they are. The processing of the thermal nodes relies entirely on The building_node definition, as it contains the information about which structure_types are included in the node, whether the node represents the interior air (via the interior_air_and_furniture_weight parameter), or domestic hot water demand (via the domestic_hot_water_demand_weight parameter). The procedure for calculating the properties of each lumped-capacitance thermal node goes something like this:","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Calculate the total effective thermal mass of this node by summing the effective thermal masses of the included structures and/or interior air and furniture.\nThe interior air node uses the effective_thermal_capacity_of_interior_air_and_furniture_J_m2K parameter to estimate the impact of interior air and furniture.\nCalculate the total heat transfer coefficient between this node and the interior air node based on the properties and dimensions of the included structures.\nRelevant for structural nodes only.\nCalculate the total heat transfer coefficient between this node and the ambient air and/or ground.\nFor structural nodes, this is again based on the properties and dimensions of the included structures.\nFor the interior air node, this is includes the impact of windows, ventilation and infiltration, and thermal bridges.\nCalculate the total heat gains on this node, including internal and solar heat gains.\nThe assumed convective fraction of the heat gains are applied to the interior air node, while the assumed radiative fraction of the heat gains are distributed among the structural nodes based on their relative total structural surface areas.\nDomestic hot water demand is applied as a \"negative heat gain\" on the domestic hot water node.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"There are a few important simplifications in the above BuildingNodeData processing:","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Windows are treated separate from the rest of the structures, assumed to have negligible thermal mass, and act as a direct thermal resistance between the interior air and ambient air nodes.\nThe structural nodes don't interact with each other directly, only via the interior air node.\nEssentially, there's no approximation for heat transfer at the junctions of the different structures, nor for the radiative heat transfer between structures.\nThermal bridges are assumed to bypass the structural nodes entirely. Thus, their contribution is included in the heat transfer coefficient between the interior air node and the ambient air node.\nIn principle, it would be possible to split the effect of the thermal bridges between the interior and exterior heat transfer coefficients of the structural nodes. However, treating them separately in this manner is simpler.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"For readers interested in the technical details and exact formulations, please refer to the documentation of the ArchetypeBuildingModel.process_building_node function, and the functions linked therein. See the Processing thermal nodes into AbstractNodes section for how the data is adapted for use with large-scale energy system models, which also happens to simplify Solving the baseline heating demand and HVAC equipment consumption. Ultimately, the end result will look something like this:","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"(Image: RCDiag)","category":"page"},{"location":"archetype_modelling/#Calculating-the-properties-of-the-HVAC-equipment","page":"Archetype building modelling","title":"Calculating the properties of the HVAC equipment","text":"","category":"section"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"The properties of the HVAC equipment are based on The building_process definition, and processed into BuildingProcessData. Overall, the process is pretty simple, roughly consisting of the following steps:","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Fetch the user-defined properties of the HVAC equipment, most important of which are the input/output capacities.\nCalculate the potentially weather-dependent coefficient of performance.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"For the exact formulations, see the documentation for the ArchetypeBuildingModel.process_building_system function and the functions linked therein. See the Processing HVAC equipment into AbstractProcesses section for how the data is adapted for use with large-scale energy system models, which also happens to simplify Solving the baseline heating demand and HVAC equipment consumption.","category":"page"},{"location":"archetype_modelling/#Solving-the-baseline-heating-demand-and-HVAC-equipment-consumption","page":"Archetype building modelling","title":"Solving the baseline heating demand and HVAC equipment consumption","text":"","category":"section"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"While the main goal of ArchetypeBuildingModel.jl is the creation of the lumped-capacitance thermal models depicting the aggregated flexible heating/cooling demand of building stocks, it is often useful or even necessary to have a baseline heating/cooling demand available for comparison. As such, ArchetypeBuildingModel.jl includes a very simple rule-based simulation of heating and cooling of the created ArchetypeBuildings.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Storing and processing the heating/cooling demand and HVAC equipment energy consumption results are handled via the ArchetypeBuildingResults struct. The actual calculations are performed in two main steps:","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"Solve initial temperatures (unless explicitly provided), node temperatures, and nodal HVAC demand using the ArchetypeBuildingModel.solve_heating_demand function.\nSolve the HVAC equipment consumption per process based on the above nodal demands using the ArchetypeBuildingModel.solve_consumption function.","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"For readers interested in the actual implementation and technical details, please refer to the documentation of the above functions, and the functions linked therein. However, there are a few things worth noting about how the heating/cooling demand and HVAC equipment consumption are solved:","category":"page"},{"location":"archetype_modelling/","page":"Archetype building modelling","title":"Archetype building modelling","text":"If not explicitly provided, lumped-capacitance thermal node initial temperatures are solved by starting the temperatures at their lowest permitted temperatures, and repeatedly solving the first 24-hours, replacing the initial temperatures with the ones on hour 24 until the temperatures at the beginning and end of the simulated 24-hour period converge.\nThe simulation of the heating/cooling demand uses implicit Euler discretization of the lumped-capacitance thermal node energy balance equations.\nThis is mainly done to conform with the energy balance equations of Backbone and SpineOpt, as they both also use implicit Euler discretization for their energy balance constraints.\nThe simple rule-based controller used in determining the heating/cooling demand for the lumped-capacitance thermal nodes has the following rules:\nIf the temperature of a node would increase above its permitted maximum temperature, provide just enough cooling to keep it at the maximum.\nIf the temperature of a node would fall below its permitted minimum, provide just enough heating to keep it at the minimum.\nThe nodal heating/cooling demand is used as-is for every building_process for determining the HVAC equipment energy consumption, regardless of potential capacity limitations.\nEssentially, when calculating the baseline HVAC equipment energy consumption, we assume that every process handles the entirety of the heating/cooling load.\nFor most simple use-cases, this is fine. However, if there are e.g. multiple parallel heating or cooling processes on a node, the calculated baseline HVAC consumption isn't useful as-is. In such cases, the user needs to combine the HVAC consumption time series themselves, based on assumed operation logic of the parallel heating/cooling systems.","category":"page"}]
}
